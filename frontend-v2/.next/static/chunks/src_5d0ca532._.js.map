{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/peterallen/Lifestyle%20Design%20Auto%20Poster/frontend-v2/src/components/ChartWave.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useRef } from 'react';\n\ninterface ChartWaveProps {\n  color?: string;\n  amplitude?: number;\n  frequency?: number;\n  speed?: number;\n  height?: number;\n  width?: number;\n  className?: string;\n  offsetY?: number; // Vertical offset for wave positioning\n  isGlowing?: boolean; // Glow effect for new records\n  thickness?: number; // Line thickness\n}\n\nexport default function ChartWave({\n  color = 'red',\n  amplitude = 10,\n  frequency = 0.01,\n  speed = 1,\n  height = 60,\n  width = 300,\n  className = '',\n  offsetY = 0,\n  isGlowing = false,\n  thickness = 2,\n}: ChartWaveProps) {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const phase = useRef(0);\n  const animationId = useRef<number>();\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    \n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n    \n    canvas.width = width;\n    canvas.height = height;\n\n    const animate = () => {\n      // Increment phase continuously for infinite motion\n      phase.current += speed;\n\n      // Clear canvas\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      \n      // Begin path for wave\n      ctx.beginPath();\n\n      // Draw seamless infinite wave with vertical offset\n      for (let x = 0; x < canvas.width; x++) {\n        const y = (height / 2) + offsetY + amplitude * Math.sin((x + phase.current) * frequency);\n        if (x === 0) {\n          ctx.moveTo(x, y);\n        } else {\n          ctx.lineTo(x, y);\n        }\n      }\n\n      // 🌟 SPECIAL VISUALS: Glow effect for new records\n      if (isGlowing) {\n        ctx.strokeStyle = color;\n        ctx.lineWidth = thickness + 2; // Thicker when glowing\n        ctx.shadowBlur = 20; // Strong glow\n        ctx.shadowColor = color;\n        ctx.globalAlpha = 0.9;\n      } else {\n        ctx.strokeStyle = color;\n        ctx.lineWidth = thickness;\n        ctx.shadowBlur = 8;\n        ctx.shadowColor = color;\n        ctx.globalAlpha = 0.8;\n      }\n      \n      ctx.stroke();\n      ctx.globalAlpha = 1; // Reset alpha\n\n      // Continue animation\n      animationId.current = requestAnimationFrame(animate);\n    };\n\n    animate();\n\n    // Cleanup\n    return () => {\n      if (animationId.current) {\n        cancelAnimationFrame(animationId.current);\n      }\n    };\n  }, [amplitude, frequency, speed, height, width, color]);\n\n  return (\n    <canvas \n      ref={canvasRef} \n      className={className}\n      style={{ \n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%'\n      }}\n    />\n  );\n}"],"names":[],"mappings":";;;;AAEA;;;AAFA;;AAiBe,SAAS,UAAU,KAWjB;QAXiB,EAChC,QAAQ,KAAK,EACb,YAAY,EAAE,EACd,YAAY,IAAI,EAChB,QAAQ,CAAC,EACT,SAAS,EAAE,EACX,QAAQ,GAAG,EACX,YAAY,EAAE,EACd,UAAU,CAAC,EACX,YAAY,KAAK,EACjB,YAAY,CAAC,EACE,GAXiB;;IAYhC,MAAM,YAAY,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAqB;IAC5C,MAAM,QAAQ,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAE;IACrB,MAAM,cAAc,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD;IAEzB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;+BAAE;YACR,MAAM,SAAS,UAAU,OAAO;YAChC,IAAI,CAAC,QAAQ;YAEb,MAAM,MAAM,OAAO,UAAU,CAAC;YAC9B,IAAI,CAAC,KAAK;YAEV,OAAO,KAAK,GAAG;YACf,OAAO,MAAM,GAAG;YAEhB,MAAM;+CAAU;oBACd,mDAAmD;oBACnD,MAAM,OAAO,IAAI;oBAEjB,eAAe;oBACf,IAAI,SAAS,CAAC,GAAG,GAAG,OAAO,KAAK,EAAE,OAAO,MAAM;oBAE/C,sBAAsB;oBACtB,IAAI,SAAS;oBAEb,mDAAmD;oBACnD,IAAK,IAAI,IAAI,GAAG,IAAI,OAAO,KAAK,EAAE,IAAK;wBACrC,MAAM,IAAI,AAAC,SAAS,IAAK,UAAU,YAAY,KAAK,GAAG,CAAC,CAAC,IAAI,MAAM,OAAO,IAAI;wBAC9E,IAAI,MAAM,GAAG;4BACX,IAAI,MAAM,CAAC,GAAG;wBAChB,OAAO;4BACL,IAAI,MAAM,CAAC,GAAG;wBAChB;oBACF;oBAEA,kDAAkD;oBAClD,IAAI,WAAW;wBACb,IAAI,WAAW,GAAG;wBAClB,IAAI,SAAS,GAAG,YAAY,GAAG,uBAAuB;wBACtD,IAAI,UAAU,GAAG,IAAI,cAAc;wBACnC,IAAI,WAAW,GAAG;wBAClB,IAAI,WAAW,GAAG;oBACpB,OAAO;wBACL,IAAI,WAAW,GAAG;wBAClB,IAAI,SAAS,GAAG;wBAChB,IAAI,UAAU,GAAG;wBACjB,IAAI,WAAW,GAAG;wBAClB,IAAI,WAAW,GAAG;oBACpB;oBAEA,IAAI,MAAM;oBACV,IAAI,WAAW,GAAG,GAAG,cAAc;oBAEnC,qBAAqB;oBACrB,YAAY,OAAO,GAAG,sBAAsB;gBAC9C;;YAEA;YAEA,UAAU;YACV;uCAAO;oBACL,IAAI,YAAY,OAAO,EAAE;wBACvB,qBAAqB,YAAY,OAAO;oBAC1C;gBACF;;QACF;8BAAG;QAAC;QAAW;QAAW;QAAO;QAAQ;QAAO;KAAM;IAEtD,qBACE,6LAAC;QACC,KAAK;QACL,WAAW;QACX,OAAO;YACL,UAAU;YACV,KAAK;YACL,MAAM;YACN,OAAO;YACP,QAAQ;QACV;;;;;;AAGN;GA3FwB;KAAA","debugId":null}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":["file:///Users/peterallen/Lifestyle%20Design%20Auto%20Poster/frontend-v2/src/components/DashboardChart.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useState } from 'react';\nimport ChartWave from './ChartWave';\n\nconst DashboardChart = () => {\n  const [settings, setSettings] = useState({ dailyPostLimit: 3 });\n  const [engagementScore, setEngagementScore] = useState(0.5); // normalized 0–1\n  const [autopilotOn, setAutopilotOn] = useState(false);\n  const [newHigh, setNewHigh] = useState(false);\n  const [lastPostSpike, setLastPostSpike] = useState<number | null>(null);\n  const [autopilotVolume, setAutopilotVolume] = useState(3); // Volume for animation scaling\n  const [animationSpeed, setAnimationSpeed] = useState(3); // Base animation speed\n  const [platformData, setPlatformData] = useState({\n    instagram: { active: true, todayPosts: 0 },\n    youtube: { active: true, todayPosts: 0 }\n  });\n\n  // ✅ Real-time data fetching with enhanced connections\n  useEffect(() => {\n    const fetchChartData = async () => {\n      try {\n        const res = await fetch('http://localhost:3002/api/chart/status');\n        if (res.ok) {\n          const data = await res.json();\n          \n          // 🎛️ CORE SETTINGS\n          setSettings(data.settings || { dailyPostLimit: 3 });\n          setAutopilotOn(data.autopilotRunning || false);\n          \n          // 📊 ENGAGEMENT DATA (affects wave amplitude)\n          const currentEngagement = data.engagementScore || 0;\n          setEngagementScore(currentEngagement);\n          \n          // 🌟 NEW RECORD DETECTION (triggers glow effect)\n          const isNewRecord = data.newHighScore || false;\n          if (isNewRecord && !newHigh) {\n            console.log('🏆 New engagement record detected! Activating glow effect.');\n          }\n          setNewHigh(isNewRecord);\n          \n          // ⚡ POST SPIKE DETECTION (triggers spike animation)\n          const currentPostTime = data.lastPostTime;\n          if (currentPostTime && currentPostTime !== lastPostSpike) {\n            console.log('📡 New post detected! Triggering spike animation.');\n            setLastPostSpike(currentPostTime);\n          }\n          \n          // 📈 VOLUME SCALING (affects speed and thickness)\n          if (data.settings?.dailyPostLimit) {\n            setAutopilotVolume(data.settings.dailyPostLimit);\n          }\n          \n          // 🎯 PLATFORM ACTIVITY (affects line height and visibility)\n          if (data.platformData) {\n            const prevInstagram = platformData.instagram.todayPosts;\n            const prevYoutube = platformData.youtube.todayPosts;\n            const newInstagram = data.platformData.instagram?.todayPosts || 0;\n            const newYoutube = data.platformData.youtube?.todayPosts || 0;\n            \n            // Log platform activity changes\n            if (newInstagram > prevInstagram) {\n              console.log(`📸 Instagram activity increased: ${prevInstagram} → ${newInstagram} posts`);\n            }\n            if (newYoutube > prevYoutube) {\n              console.log(`🎥 YouTube activity increased: ${prevYoutube} → ${newYoutube} posts`);\n            }\n            \n            setPlatformData(data.platformData);\n          }\n          \n          console.log('📊 Chart connected - Live data updated:', {\n            autopilot: data.autopilotRunning,\n            engagement: currentEngagement,\n            newRecord: isNewRecord,\n            instagram: data.platformData?.instagram?.todayPosts || 0,\n            youtube: data.platformData?.youtube?.todayPosts || 0\n          });\n        }\n      } catch (error) {\n        console.warn('📊 Chart connection failed:', error);\n      }\n    };\n    \n    // Initial fetch\n    fetchChartData();\n    \n    // Real-time updates every 3 seconds for responsive chart\n    const interval = setInterval(fetchChartData, 3000);\n    \n    return () => clearInterval(interval);\n  }, [lastPostSpike, newHigh, platformData.instagram.todayPosts, platformData.youtube.todayPosts]);\n\n  // ✅ Poll for immediate frontend events\n  useEffect(() => {\n    let lastEventCheck = Date.now();\n    \n    const pollForEvents = async () => {\n      try {\n        const res = await fetch(`http://localhost:3002/api/events/recent?since=${lastEventCheck}`);\n        if (res.ok) {\n          const data = await res.json();\n          \n          if (data.events && data.events.length > 0) {\n            console.log('🔔 Processing frontend events:', data.events);\n            \n            data.events.forEach((event: any) => {\n              switch (event.type) {\n                case 'autopilot-success':\n                  console.log(`🚀 Autopilot ${event.data.platform} success detected!`);\n                  setLastPostSpike(event.data.timestamp);\n                  setAutopilotVolume(event.data.volume);\n                  if (event.data.engagement) {\n                    setEngagementScore(event.data.engagement);\n                  }\n                  break;\n                  \n                case 'post-spike':\n                  console.log(`📡 Post spike on ${event.data.platform}!`);\n                  setLastPostSpike(event.data.timestamp);\n                  break;\n                  \n                case 'new-engagement-record':\n                  console.log(`🏆 New engagement record on ${event.data.platform}!`);\n                  setNewHigh(true);\n                  setTimeout(() => setNewHigh(false), 10000);\n                  break;\n                  \n                case 'engagement-updated':\n                  console.log(`📊 Engagement updated for ${event.data.platform}: ${event.data.score}`);\n                  setEngagementScore(event.data.score);\n                  break;\n                  \n                case 'autopilot-toggled':\n                  console.log(`🎛️ Autopilot ${event.data.enabled ? 'enabled' : 'disabled'}!`);\n                  setAutopilotOn(event.data.enabled);\n                  break;\n              }\n            });\n          }\n          \n          lastEventCheck = data.timestamp;\n        }\n      } catch (error) {\n        console.warn('🔔 Failed to poll for events:', error);\n      }\n    };\n    \n    // Poll every 2 seconds for immediate responses\n    const eventInterval = setInterval(pollForEvents, 2000);\n    \n    return () => clearInterval(eventInterval);\n  }, []);\n\n  // ✅ Volume-based animation scaling effect (restored but refined)\n  useEffect(() => {\n    const pulseChartLines = () => {\n      const baseSpeed = 3; // 3s animation baseline\n      const baseThickness = 1.5; // Thinner baseline\n\n      const speed = Math.max(1, baseSpeed - 0.3 * (autopilotVolume - 1)); // Faster with more posts\n      const thickness = baseThickness + (autopilotVolume - 1) * 0.8; // Less extreme thickness scaling\n      \n      setAnimationSpeed(speed);\n      console.log(`📊 Chart scaling: Volume=${autopilotVolume}, Speed=${speed}s, Thickness=${thickness}px`);\n    };\n\n    pulseChartLines();\n  }, [autopilotVolume]);\n\n  // ✅ Enhanced event listeners for immediate chart updates\n  useEffect(() => {\n    // 🚀 AUTOPILOT SUCCESS EVENT (immediate spike + volume update)\n    const handleAutopilotSuccess = (event: CustomEvent) => {\n      const volume = event.detail?.volume || autopilotVolume;\n      const platform = event.detail?.platform || 'unknown';\n      \n      console.log(`🚀 Autopilot ${platform} post successful! Triggering immediate chart update.`);\n      \n      // Immediate spike animation\n      setLastPostSpike(Date.now());\n      \n      // Update volume for speed/thickness changes\n      setAutopilotVolume(volume);\n      \n      // Force immediate data refresh\n      setTimeout(() => {\n        const fetchEvent = new Event('force-chart-refresh');\n        window.dispatchEvent(fetchEvent);\n      }, 500);\n    };\n\n    // 🏆 NEW RECORD EVENT (immediate glow effect)\n    const handleNewRecord = (event: CustomEvent) => {\n      const recordType = event.detail?.type || 'engagement';\n      const platform = event.detail?.platform || 'unknown';\n      \n      console.log(`🏆 New ${recordType} record on ${platform}! Activating glow effect.`);\n      \n      // Immediate glow activation\n      setNewHigh(true);\n      \n      // Auto-disable glow after 10 seconds\n      setTimeout(() => {\n        setNewHigh(false);\n      }, 10000);\n    };\n\n    // 📊 ENGAGEMENT UPDATE EVENT (immediate amplitude change)\n    const handleEngagementUpdate = (event: CustomEvent) => {\n      const newScore = event.detail?.score || 0;\n      const platform = event.detail?.platform || 'unknown';\n      \n      console.log(`📊 ${platform} engagement updated: ${newScore}`);\n      setEngagementScore(newScore);\n    };\n\n    // 🎛️ AUTOPILOT TOGGLE EVENT (immediate on/off state)\n    const handleAutopilotToggle = (event: CustomEvent) => {\n      const isOn = event.detail?.enabled || false;\n      console.log(`🎛️ Autopilot ${isOn ? 'enabled' : 'disabled'}! Chart responding immediately.`);\n      setAutopilotOn(isOn);\n    };\n\n    // Register all event listeners\n    window.addEventListener('autopilot-success', handleAutopilotSuccess as EventListener);\n    window.addEventListener('new-engagement-record', handleNewRecord as EventListener);\n    window.addEventListener('engagement-updated', handleEngagementUpdate as EventListener);\n    window.addEventListener('autopilot-toggled', handleAutopilotToggle as EventListener);\n    \n    return () => {\n      window.removeEventListener('autopilot-success', handleAutopilotSuccess as EventListener);\n      window.removeEventListener('new-engagement-record', handleNewRecord as EventListener);\n      window.removeEventListener('engagement-updated', handleEngagementUpdate as EventListener);\n      window.removeEventListener('autopilot-toggled', handleAutopilotToggle as EventListener);\n    };\n  }, [autopilotVolume]);\n\n  // ✅ Calculate dynamic wave properties exactly per specifications\n  const calculateWaveProps = (platform: 'instagram' | 'youtube') => {\n    const platformInfo = platformData[platform];\n    const todayPosts = platformInfo.todayPosts;\n    const isActive = platformInfo.active;\n    \n    // 🧬 LINE BEHAVIOR IMPLEMENTATION\n    \n    // 1. BASE SPEED: Slower when autopilot OFF, faster when ON\n    const baseSpeed = platform === 'instagram' ? 1.2 : 1.4;\n    const speed = autopilotOn \n      ? baseSpeed * Math.max(0.8, 2 - (autopilotVolume / 10)) // Faster with more posts\n      : baseSpeed * 0.4; // Slow when autopilot OFF\n    \n    // 2. VERTICAL POSITION: Lines rise based on posts per day\n    const postRatio = Math.min(todayPosts / settings.dailyPostLimit, 1);\n    const offsetY = autopilotOn\n      ? isActive \n        ? -20 + (postRatio * -25) // Higher position = more posts (negative = up)\n        : 30 // Inactive platforms stay low\n      : 25; // Near bottom when autopilot OFF\n    \n    // 3. AMPLITUDE: Based on engagement (larger waves = more engagement)\n    const baseAmplitude = platform === 'instagram' ? 12 : 9;\n    const engagementMultiplier = 0.5 + (engagementScore * 1.5); // 0.5x to 2x based on engagement\n    const amplitude = autopilotOn\n      ? isActive \n        ? baseAmplitude * engagementMultiplier // Engagement-responsive waves\n        : baseAmplitude * 0.3 // Small waves when inactive\n      : baseAmplitude * 0.4; // Low amplitude when autopilot OFF\n    \n    // 4. GLOW EFFECT: New record detection\n    const isGlowing = newHigh && isActive;\n    \n    return { speed, amplitude, offsetY, isGlowing };\n  };\n\n  // Get dynamic wave properties\n  const instagramProps = calculateWaveProps('instagram');\n  const youtubeProps = calculateWaveProps('youtube');\n\n  return (\n    <div \n      className=\"chart-container\" \n      style={{ \n        position: 'relative', \n        width: '100%', \n        height: '120px', \n        marginTop: '20px',\n        backgroundColor: '#121212',\n        borderRadius: '6px',\n        overflow: 'hidden'\n      }}\n    >\n      {/* Instagram Wave - Pink */}\n      <ChartWave \n        color=\"rgba(255, 105, 180, 0.9)\" \n        speed={instagramProps.speed} \n        amplitude={instagramProps.amplitude}\n        frequency={0.015}\n        height={120}\n        width={800}\n        offsetY={instagramProps.offsetY}\n        isGlowing={instagramProps.isGlowing}\n        thickness={instagramProps.isGlowing ? 4 : 2}\n      />\n      \n      {/* YouTube Wave - Red */}\n      <ChartWave \n        color=\"rgba(255, 0, 0, 0.9)\" \n        speed={youtubeProps.speed} \n        amplitude={youtubeProps.amplitude}\n        frequency={0.015}\n        height={120}\n        width={800}\n        offsetY={youtubeProps.offsetY}\n        isGlowing={youtubeProps.isGlowing}\n        thickness={youtubeProps.isGlowing ? 4 : 2}\n      />\n      \n      {/* 🌟 SPECIAL VISUALS: Real-time spike animation when post goes live */}\n      {lastPostSpike && (Date.now() - lastPostSpike) < 3000 && (\n        <div\n          style={{\n            position: 'absolute',\n            left: `${((Date.now() - lastPostSpike) / 30) % 100}%`,\n            top: 0,\n            width: '2px',\n            height: '100%',\n            background: 'linear-gradient(to bottom, rgba(255,255,255,0.8), rgba(255,255,255,0.2))',\n            animation: 'pulse 0.5s ease-in-out infinite alternate',\n            pointerEvents: 'none'\n          }}\n        />\n      )}\n      \n      <style jsx>{`\n        @keyframes pulse {\n          from { opacity: 0.4; }\n          to { opacity: 1; }\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default DashboardChart;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 496, "column": 0}, "map": {"version":3,"sources":["file:///Users/peterallen/Lifestyle%20Design%20Auto%20Poster/frontend-v2/src/components/HeartStatusCard.tsx"],"sourcesContent":["'use client';\n\nimport React, { useEffect, useState } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\n\ninterface HeartData {\n  isPosting: boolean;\n  growthRate: number;\n  engagement: number;\n  lastPost: string;\n}\n\nconst HeartStatusCard: React.FC = () => {\n  const [igData, setIgData] = useState<HeartData>({ \n    isPosting: false, \n    growthRate: 0, \n    engagement: 50,\n    lastPost: new Date().toISOString()\n  });\n  \n  const [ytData, setYtData] = useState<HeartData>({ \n    isPosting: false, \n    growthRate: 0, \n    engagement: 50,\n    lastPost: new Date().toISOString()\n  });\n  \n  const [showFusion, setShowFusion] = useState(false);\n  const [lastPostSpike, setLastPostSpike] = useState({ ig: false, yt: false });\n\n\n  // Fetch data from backend\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:3002/api/chart/status');\n        const data = await response.json();\n        \n        // Use the correct data structure from the actual API\n        const platformData = data.platformData || {};\n        const engagementScore = (data.engagementScore || 0) * 100; // Convert to percentage\n        const isRunning = data.autopilotRunning || false;\n        \n        setIgData({\n          isPosting: isRunning && platformData.instagram?.active,\n          growthRate: platformData.instagram?.todayPosts || 0,\n          engagement: engagementScore,\n          lastPost: new Date(data.lastPostTime || Date.now()).toISOString()\n        });\n        \n        setYtData({\n          isPosting: isRunning && platformData.youtube?.active,\n          growthRate: platformData.youtube?.todayPosts || 0,\n          engagement: engagementScore,\n          lastPost: new Date(data.lastPostTime || Date.now()).toISOString()\n        });\n        \n        // Check for fusion (both platforms posted recently)\n        const lastPostTime = data.lastPostTime;\n        const timeSinceLastPost = lastPostTime ? Date.now() - lastPostTime : Infinity;\n        \n        if (timeSinceLastPost <= 5 * 60 * 1000 && platformData.instagram?.active && platformData.youtube?.active) { // 5 minutes\n          setShowFusion(true);\n          setTimeout(() => setShowFusion(false), 10000); // Hold for 10 seconds\n        }\n      } catch (error) {\n        console.error('Failed to fetch heart data:', error);\n      }\n    };\n\n    fetchData();\n    const interval = setInterval(fetchData, 30000); // Update every 30 seconds\n    return () => clearInterval(interval);\n  }, []);\n\n  const getHeartStatus = (data: HeartData) => {\n    const status = {\n      cracked: data.engagement < 10,\n      pulseSpeed: data.growthRate > 5 ? 'fast' : data.growthRate > 0 ? 'normal' : 'slow',\n      spike: false // Will be set by post events\n    };\n    return status;\n  };\n\n  const HeartSVG: React.FC<{ \n    platform: 'instagram' | 'youtube'; \n    data: HeartData; \n  }> = ({ platform, data }) => {\n    const status = getHeartStatus(data);\n    const color = platform === 'instagram' ? '#E1306C' : '#FF0000';\n    \n    return (\n      <motion.div\n        className=\"relative\"\n        animate={{\n          scale: status.spike ? [1, 1.2, 1] : 1,\n        }}\n        transition={{\n          scale: { duration: 2 },\n          repeat: status.pulseSpeed === 'fast' ? Infinity : status.pulseSpeed === 'normal' ? Infinity : 0,\n          repeatDelay: status.pulseSpeed === 'fast' ? 0.5 : 1.5\n        }}\n      >\n        <motion.svg\n          width=\"60\"\n          height=\"60\"\n          viewBox=\"0 0 24 24\"\n          className={`drop-shadow-lg ${status.cracked ? 'opacity-60' : ''}`}\n          animate={{\n            filter: data.isPosting ? [\n              `drop-shadow(0 0 10px ${color})`,\n              `drop-shadow(0 0 20px ${color})`,\n              `drop-shadow(0 0 10px ${color})`\n            ] : `drop-shadow(0 0 5px ${color})`\n          }}\n          transition={{ duration: 1, repeat: data.isPosting ? Infinity : 0 }}\n        >\n          <path\n            d=\"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\"\n            fill={color}\n            className={status.cracked ? 'opacity-70' : ''}\n          />\n          {status.cracked && (\n            <path\n              d=\"M12 3L14 8L12 12L10 8Z\"\n              stroke=\"#666\"\n              strokeWidth=\"1\"\n              fill=\"none\"\n              className=\"animate-pulse\"\n            />\n          )}\n        </motion.svg>\n        \n        {/* Particle effects */}\n        {data.isPosting && (\n          <div className=\"absolute inset-0 pointer-events-none\">\n            {[...Array(3)].map((_, i) => (\n              <motion.div\n                key={i}\n                className=\"absolute w-1 h-1 bg-white rounded-full\"\n                style={{\n                  left: `${20 + i * 20}%`,\n                  top: `${30 + i * 10}%`,\n                }}\n                animate={{\n                  opacity: [0, 1, 0],\n                  scale: [0, 1, 0],\n                  y: [-10, 0, 10]\n                }}\n                transition={{\n                  duration: 2,\n                  repeat: Infinity,\n                  delay: i * 0.5\n                }}\n              />\n            ))}\n          </div>\n        )}\n      </motion.div>\n    );\n  };\n\n  const FusionHeart: React.FC = () => (\n    <motion.div\n      initial={{ scale: 0, rotate: 0 }}\n      animate={{ \n        scale: [0, 1.2, 1],\n        rotate: [0, 360, 0],\n      }}\n      exit={{ scale: 0, opacity: 0 }}\n      transition={{ duration: 1 }}\n      className=\"relative\"\n    >\n      <motion.svg\n        width=\"120\"\n        height=\"120\"\n        viewBox=\"0 0 24 24\"\n        className=\"drop-shadow-2xl\"\n        animate={{\n          filter: [\n            'drop-shadow(0 0 20px #8B0000)',\n            'drop-shadow(0 0 40px #8B0000)',\n            'drop-shadow(0 0 20px #8B0000)'\n          ]\n        }}\n        transition={{ duration: 1, repeat: Infinity }}\n      >\n        <path\n          d=\"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\"\n          fill=\"#8B0000\"\n        />\n      </motion.svg>\n      \n      {/* Fusion sparkles */}\n      <div className=\"absolute inset-0 pointer-events-none\">\n        {[...Array(8)].map((_, i) => (\n          <motion.div\n            key={i}\n            className=\"absolute w-2 h-2 bg-yellow-400 rounded-full\"\n            style={{\n              left: `${Math.random() * 100}%`,\n              top: `${Math.random() * 100}%`,\n            }}\n            animate={{\n              opacity: [0, 1, 0],\n              scale: [0, 1, 0],\n              rotate: [0, 360]\n            }}\n            transition={{\n              duration: 1.5,\n              repeat: Infinity,\n              delay: i * 0.2\n            }}\n          />\n        ))}\n      </div>\n    </motion.div>\n  );\n\n  return (\n    <div className=\"h-[120px] mt-5 bg-[#121212] border border-[#333] rounded-md p-4 relative overflow-hidden\">\n      {/* Background particle glow */}\n      <div className=\"absolute inset-0 bg-gradient-to-br from-purple-900/10 to-blue-900/10 pointer-events-none\" />\n      \n      <div className=\"relative z-10 h-full flex items-center justify-center\">\n        <AnimatePresence mode=\"wait\">\n          {showFusion ? (\n            <FusionHeart />\n          ) : (\n            <motion.div \n              className=\"flex items-center space-x-8\"\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              exit={{ opacity: 0 }}\n            >\n              <div className=\"relative\">\n                <HeartSVG\n                  platform=\"instagram\"\n                  data={igData}\n                />\n              </div>\n              \n              <div className=\"relative\">\n                <HeartSVG\n                  platform=\"youtube\"\n                  data={ytData}\n                />\n              </div>\n            </motion.div>\n          )}\n        </AnimatePresence>\n      </div>\n    </div>\n  );\n};\n\nexport default HeartStatusCard;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 893, "column": 0}, "map": {"version":3,"sources":["file:///Users/peterallen/Lifestyle%20Design%20Auto%20Poster/frontend-v2/src/components/RecentAutoPilotPosts.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\ntype AutoPilotPost = {\n  platform: 'Instagram' | 'YouTube';\n  thumbnailUrl: string;\n  timestamp: string;\n};\n\nconst platformStyles = {\n  Instagram: {\n    borderColor: 'border-pink-600',\n    icon: '/icons/ig-icon.svg',\n    alt: 'Instagram',\n  },\n  YouTube: {\n    borderColor: 'border-red-600',\n    icon: '/icons/yt-icon.svg',\n    alt: 'YouTube',\n  },\n};\n\nconst RecentAutoPilotPosts: React.FC<{ posts: AutoPilotPost[] }> = ({ posts = [] }) => {\n  const [showRecent, setShowRecent] = useState(false);\n\n  const toggleView = () => {\n    setShowRecent(!showRecent);\n  };\n\n  return (\n    <div className=\"activity-feed-compact\">\n      <div style={{display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '1rem'}}>\n        <h2 style={{fontSize: '1.25rem', fontWeight: '600', margin: 0}}>\n          {showRecent ? 'Recent AutoPilot Posts' : 'Upcoming AutoPilot Posts'}\n        </h2>\n        <button \n          onClick={toggleView}\n          style={{\n            background: '#8B5CF6',\n            color: 'white',\n            border: 'none',\n            borderRadius: '6px',\n            padding: '0.5rem 1rem',\n            fontSize: '0.875rem',\n            fontWeight: '500',\n            cursor: 'pointer'\n          }}\n        >\n          {showRecent ? 'Show Upcoming' : 'Show Recent'}\n        </button>\n      </div>\n      \n      {!showRecent ? (\n        // Show upcoming posts (existing placeholder content)\n        <>\n          <div className=\"activity-item\">\n            <div className=\"activity-dot\"></div>\n            <div className=\"activity-content\">\n              <div className=\"activity-title\">Post auto-published</div>\n              <div className=\"activity-time\">12 minutes ago</div>\n            </div>\n          </div>\n\n          <div className=\"activity-item\">\n            <div className=\"activity-dot\"></div>\n            <div className=\"activity-content\">\n              <div className=\"activity-title\">Story view milestone reached</div>\n              <div className=\"activity-time\">1 hour ago</div>\n            </div>\n          </div>\n\n          <div className=\"activity-item\">\n            <div className=\"activity-dot\"></div>\n            <div className=\"activity-content\">\n              <div className=\"activity-title\">New follower surge detected</div>\n              <div className=\"activity-time\">3 hours ago</div>\n            </div>\n          </div>\n\n          <div className=\"activity-item\">\n            <div className=\"activity-dot\"></div>\n            <div className=\"activity-content\">\n              <div className=\"activity-title\">Engagement goal achieved</div>\n              <div className=\"activity-time\">6 hours ago</div>\n            </div>\n          </div>\n        </>\n      ) : (\n        // Show recent posts with thumbnails\n        posts.length === 0 ? (\n          <div className=\"activity-item\">\n            <div className=\"activity-dot\"></div>\n            <div className=\"activity-content\">\n              <div className=\"activity-title\">No recent posts found</div>\n              <div className=\"activity-time\">Check back later</div>\n            </div>\n          </div>\n        ) : (\n          posts.map((post, index) => {\n            const platformStyle = platformStyles[post.platform];\n            return (\n              <div key={`${post.platform}-${index}`} className=\"activity-item\" style={{\n                display: 'flex',\n                alignItems: 'center',\n                gap: '12px',\n                padding: '12px',\n                backgroundColor: '#0a0a0a',\n                border: '1px solid #1f1f1f',\n                borderRadius: '8px',\n                marginBottom: '8px'\n              }}>\n                {/* Thumbnail */}\n                <div style={{\n                  width: '60px',\n                  height: '60px',\n                  borderRadius: '8px',\n                  overflow: 'hidden',\n                  border: `2px solid ${post.platform === 'Instagram' ? '#e91e63' : '#f44336'}`,\n                  flexShrink: 0\n                }}>\n                  <img \n                    src={post.thumbnailUrl} \n                    alt={`${post.platform} post thumbnail`}\n                    style={{\n                      width: '100%',\n                      height: '100%',\n                      objectFit: 'cover'\n                    }}\n                    onError={(e) => {\n                      (e.target as HTMLImageElement).src = '/default-video.jpg';\n                    }}\n                  />\n                </div>\n                \n                {/* Content */}\n                <div style={{ flex: 1 }}>\n                  <div style={{\n                    color: '#fff',\n                    fontSize: '14px',\n                    fontWeight: '500',\n                    marginBottom: '4px'\n                  }}>\n                    {post.platform} post published\n                  </div>\n                  <div style={{\n                    color: '#888',\n                    fontSize: '12px'\n                  }}>\n                    {post.timestamp}\n                  </div>\n                </div>\n                \n                {/* Platform Icon */}\n                <div style={{\n                  width: '24px',\n                  height: '24px',\n                  flexShrink: 0\n                }}>\n                  <img \n                    src={platformStyle.icon}\n                    alt={platformStyle.alt}\n                    style={{\n                      width: '100%',\n                      height: '100%',\n                      filter: post.platform === 'Instagram' ? 'hue-rotate(320deg)' : 'hue-rotate(0deg)'\n                    }}\n                    onError={(e) => {\n                      (e.target as HTMLImageElement).style.display = 'none';\n                    }}\n                  />\n                </div>\n              </div>\n            );\n          })\n        )\n      )}\n    </div>\n  );\n};\n\nexport default RecentAutoPilotPosts;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1314, "column": 0}, "map": {"version":3,"sources":["file:///Users/peterallen/Lifestyle%20Design%20Auto%20Poster/frontend-v2/src/utils/fetchRecentPosts.ts"],"sourcesContent":["export async function fetchRecentPosts(platform: 'instagram' | 'youtube') {\n  try {\n    // ✅ Connect to backend API that filters MongoDB by platform\n    const response = await fetch(`http://localhost:3002/api/activity/feed?platform=${platform}&limit=5`);\n    \n    if (!response.ok) {\n      throw new Error(`Failed to fetch ${platform} posts: ${response.status}`);\n    }\n    \n    const data = await response.json();\n    \n    // ✅ Transform data to ensure consistent format with thumbnails\n    return data.map((post: any) => ({\n      videoId: post.videoId || post.id || post._id,\n      thumbnailUrl: post.thumbnail || post.thumbnailUrl || post.video_thumbnail,\n      timestampFormatted: post.timestampFormatted || post.timestamp || formatTimestamp(post.createdAt || post.date),\n      platform: platform,\n      title: post.title || 'Untitled Post'\n    }));\n    \n  } catch (error) {\n    console.warn(`⚠️ Failed to fetch ${platform} posts:`, error);\n    return []; // Return empty array on error to prevent crashes\n  }\n}\n\n// ✅ Helper function to format timestamps consistently\nfunction formatTimestamp(timestamp: string | number | Date): string {\n  try {\n    const date = new Date(timestamp);\n    const now = new Date();\n    const diffMs = now.getTime() - date.getTime();\n    const diffMins = Math.floor(diffMs / (1000 * 60));\n    const diffHours = Math.floor(diffMs / (1000 * 60 * 60));\n    const diffDays = Math.floor(diffMs / (1000 * 60 * 60 * 24));\n    \n    if (diffMins < 60) {\n      return `${diffMins}m ago`;\n    } else if (diffHours < 24) {\n      return `${diffHours}h ago`;\n    } else if (diffDays < 7) {\n      return `${diffDays}d ago`;\n    } else {\n      return date.toLocaleDateString();\n    }\n  } catch {\n    return 'Recently posted';\n  }\n}"],"names":[],"mappings":";;;AAAO,eAAe,iBAAiB,QAAiC;IACtE,IAAI;QACF,4DAA4D;QAC5D,MAAM,WAAW,MAAM,MAAM,AAAC,oDAA4D,OAAT,UAAS;QAE1F,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM,AAAC,mBAAqC,OAAnB,UAAS,YAA0B,OAAhB,SAAS,MAAM;QACvE;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAEhC,+DAA+D;QAC/D,OAAO,KAAK,GAAG,CAAC,CAAC,OAAc,CAAC;gBAC9B,SAAS,KAAK,OAAO,IAAI,KAAK,EAAE,IAAI,KAAK,GAAG;gBAC5C,cAAc,KAAK,SAAS,IAAI,KAAK,YAAY,IAAI,KAAK,eAAe;gBACzE,oBAAoB,KAAK,kBAAkB,IAAI,KAAK,SAAS,IAAI,gBAAgB,KAAK,SAAS,IAAI,KAAK,IAAI;gBAC5G,UAAU;gBACV,OAAO,KAAK,KAAK,IAAI;YACvB,CAAC;IAEH,EAAE,OAAO,OAAO;QACd,QAAQ,IAAI,CAAC,AAAC,sBAA8B,OAAT,UAAS,YAAU;QACtD,OAAO,EAAE,EAAE,iDAAiD;IAC9D;AACF;AAEA,sDAAsD;AACtD,SAAS,gBAAgB,SAAiC;IACxD,IAAI;QACF,MAAM,OAAO,IAAI,KAAK;QACtB,MAAM,MAAM,IAAI;QAChB,MAAM,SAAS,IAAI,OAAO,KAAK,KAAK,OAAO;QAC3C,MAAM,WAAW,KAAK,KAAK,CAAC,SAAS,CAAC,OAAO,EAAE;QAC/C,MAAM,YAAY,KAAK,KAAK,CAAC,SAAS,CAAC,OAAO,KAAK,EAAE;QACrD,MAAM,WAAW,KAAK,KAAK,CAAC,SAAS,CAAC,OAAO,KAAK,KAAK,EAAE;QAEzD,IAAI,WAAW,IAAI;YACjB,OAAO,AAAC,GAAW,OAAT,UAAS;QACrB,OAAO,IAAI,YAAY,IAAI;YACzB,OAAO,AAAC,GAAY,OAAV,WAAU;QACtB,OAAO,IAAI,WAAW,GAAG;YACvB,OAAO,AAAC,GAAW,OAAT,UAAS;QACrB,OAAO;YACL,OAAO,KAAK,kBAAkB;QAChC;IACF,EAAE,UAAM;QACN,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 1369, "column": 0}, "map": {"version":3,"sources":["file:///Users/peterallen/Lifestyle%20Design%20Auto%20Poster/frontend-v2/src/components/RecentAutoPilotPostsWrapper.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport RecentAutoPilotPosts from './RecentAutoPilotPosts';\nimport { fetchRecentPosts } from '@/utils/fetchRecentPosts';\n\ntype AutoPilotPost = {\n  platform: 'Instagram' | 'YouTube';\n  thumbnailUrl: string;\n  timestamp: string;\n};\n\nconst RecentAutoPilotPostsWrapper: React.FC<{ platform: 'instagram' | 'youtube' }> = ({ platform }) => {\n  const [posts, setPosts] = useState<AutoPilotPost[]>([]);\n\n  useEffect(() => {\n    const loadPosts = async () => {\n      try {\n        const data = await fetchRecentPosts(platform);\n        \n        // Transform data to match the new component's expected format\n        const transformedPosts: AutoPilotPost[] = data.map((post: any) => ({\n          platform: platform === 'instagram' ? 'Instagram' : 'YouTube',\n          thumbnailUrl: post.thumbnailUrl || '/default-video.jpg',\n          timestamp: post.timestampFormatted || 'Recently posted'\n        }));\n        \n        setPosts(transformedPosts);\n      } catch (error) {\n        console.warn(`Failed to load ${platform} posts:`, error);\n        setPosts([]);\n      }\n    };\n    \n    loadPosts();\n  }, [platform]);\n\n  return <RecentAutoPilotPosts posts={posts} />;\n};\n\nexport default RecentAutoPilotPostsWrapper;"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;;AAQA,MAAM,8BAA+E;QAAC,EAAE,QAAQ,EAAE;;IAChG,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAmB,EAAE;IAEtD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;iDAAE;YACR,MAAM;mEAAY;oBAChB,IAAI;wBACF,MAAM,OAAO,MAAM,CAAA,GAAA,mIAAA,CAAA,mBAAgB,AAAD,EAAE;wBAEpC,8DAA8D;wBAC9D,MAAM,mBAAoC,KAAK,GAAG;gGAAC,CAAC,OAAc,CAAC;oCACjE,UAAU,aAAa,cAAc,cAAc;oCACnD,cAAc,KAAK,YAAY,IAAI;oCACnC,WAAW,KAAK,kBAAkB,IAAI;gCACxC,CAAC;;wBAED,SAAS;oBACX,EAAE,OAAO,OAAO;wBACd,QAAQ,IAAI,CAAC,AAAC,kBAA0B,OAAT,UAAS,YAAU;wBAClD,SAAS,EAAE;oBACb;gBACF;;YAEA;QACF;gDAAG;QAAC;KAAS;IAEb,qBAAO,6LAAC,6IAAA,CAAA,UAAoB;QAAC,OAAO;;;;;;AACtC;GA1BM;KAAA;uCA4BS","debugId":null}},
    {"offset": {"line": 1433, "column": 0}, "map": {"version":3,"sources":["file:///Users/peterallen/Lifestyle%20Design%20Auto%20Poster/frontend-v2/src/app/dashboard/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport DashboardChart from '../../components/DashboardChart';\nimport HeartStatusCard from '../../components/HeartStatusCard';\nimport RecentAutoPilotPostsWrapper from '../../components/RecentAutoPilotPostsWrapper';\n// import NotificationSystem from '../../components/NotificationSystem'; // DISABLED\n\ntype DashboardSettings = {\n  autopilot: boolean\n  maxPosts: number\n  postTime: string\n  repostDelay: number\n  manual: boolean\n}\n\nconst defaultStatus: DashboardSettings = {\n  autopilot: false,\n  maxPosts: 3,\n  postTime: '14:00',\n  repostDelay: 1,\n  manual: true\n}\n\nexport default function Dashboard() {\n  const [currentPlatform, setCurrentPlatform] = useState('instagram');\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [status, setStatus] = useState<DashboardSettings>(defaultStatus);\n  \n  // ✅ Ultra-robust unique key generator with global counter\n  const uniqueKeyCounter = useRef(0);\n  const generateUniqueKey = useCallback((post: any, index: number, prefix: string) => {\n    // Triple-layer uniqueness: prefix + index + incrementing counter + random component\n    uniqueKeyCounter.current += 1;\n    return `${prefix}-${index}-${uniqueKeyCounter.current}-${Math.random().toString(36).substr(2, 5)}`;\n  }, []);\n  const [stats, setStats] = useState({\n    instagram: {\n      followers: '24.8K',\n      engagement: '4.7%',\n      reach: '89.2K',\n      autoPostsPerDay: `${status.maxPosts}/day`\n    },\n    youtube: {\n      subscribers: 'N/A',\n      watchTime: 'N/A',\n      views: 'N/A',\n      autoUploadsPerWeek: '2/week'\n    }\n  });\n  const [analyticsLoading, setAnalyticsLoading] = useState(true);\n  const [recentActivity, setRecentActivity] = useState<Record<string, unknown>[]>([]);\n  const [autopilotRunning, setAutopilotRunning] = useState(false);\n  const [manualPostRunning, setManualPostRunning] = useState(false); // Separate state for manual post button\n  const [autopilotStatus, setAutopilotStatus] = useState('idle'); // 'idle', 'running', 'success', 'error'\n  const [autopilotVolume, setAutopilotVolume] = useState(3); // posts per day\n  const [engagementScore, setEngagementScore] = useState(0.65); // 0-1 normalized\n  const [newHighScore, setNewHighScore] = useState(false);\n  const [lastPostSpike, setLastPostSpike] = useState<number | null>(null);\n  const [queueSize, setQueueSize] = useState(0);\n  const [platformSettings, setPlatformSettings] = useState({\n    instagram: true,\n    youtube: true\n  });\n  const [platformData, setPlatformData] = useState({\n    instagram: { active: false, todayPosts: 0, reach: 0, engagement: 0 },\n    youtube: { active: false, todayPosts: 0, reach: 0, engagement: 0 }\n  });\n  const [lastQueueUpdate, setLastQueueUpdate] = useState<number>(0);\n  \n  // ✅ NEW: Enhanced activity feed and chart state\n  const [enhancedActivity, setEnhancedActivity] = useState<any[]>([]);\n  const [queuedPosts, setQueuedPosts] = useState<any[]>([]);\n  const [showUpcoming, setShowUpcoming] = useState(true); // Toggle between upcoming and recent\n  const [chartData, setChartData] = useState<any>(null);\n  \n  // ✅ NEW: Real-time notifications - DISABLED\n  // const [notificationHandler, setNotificationHandler] = useState<((message: string, type?: 'success' | 'error' | 'info') => void) | null>(null);\n  const [lastAutopilotCheck, setLastAutopilotCheck] = useState<number>(0);\n  const [lastActivityCount, setLastActivityCount] = useState<number>(0);\n  \n  // ✅ Memoize notification handler setter to prevent render loops - DISABLED\n  // const handleNotificationSetup = useCallback((handler: (message: string, type?: 'success' | 'error' | 'info') => void) => {\n  //   setNotificationHandler(() => handler);\n  // }, []);\n  \n  // ✅ Analytics fetch function\n  const fetchAnalytics = useCallback(async () => {\n    try {\n      setAnalyticsLoading(true);\n      \n      // Fetch both Instagram and YouTube analytics in parallel\n      const [instagramRes, youtubeRes] = await Promise.all([\n        fetch('https://lifestyle-design-backend-v2.onrender.com/api/instagram/analytics'),\n        fetch('https://lifestyle-design-backend-v2.onrender.com/api/youtube/analytics')\n      ]);\n\n      let instagramData: Record<string, unknown> = {};\n      let youtubeData: Record<string, unknown> = {};\n\n      if (instagramRes.ok) {\n        const igResult = await instagramRes.json();\n        if (igResult.success && igResult.analytics) {\n          instagramData = igResult.analytics;\n          console.log('✅ Instagram analytics loaded:', instagramData.formatted);\n        }\n      } else {\n        console.warn('⚠️ Failed to load Instagram analytics');\n      }\n\n      if (youtubeRes.ok) {\n        const ytResult = await youtubeRes.json();\n        if (ytResult.success && ytResult.analytics) {\n          youtubeData = ytResult.analytics;\n          console.log('✅ YouTube analytics loaded:', youtubeData.formatted);\n        }\n      } else {\n        // Don't spam console for known credential issues\n        if (youtubeRes.status === 400) {\n          console.warn('⚠️ YouTube analytics requires credentials configuration');\n        } else {\n          console.warn('⚠️ Failed to load YouTube analytics');\n        }\n      }\n\n      // Update stats with real data\n      const igFormatted = instagramData.formatted as any;\n      const ytFormatted = youtubeData.formatted as any;\n      \n      setStats(prevStats => ({\n        instagram: {\n          followers: igFormatted?.followers || prevStats.instagram.followers,\n          engagement: igFormatted?.engagement || prevStats.instagram.engagement,\n          reach: igFormatted?.reach || prevStats.instagram.reach,\n          autoPostsPerDay: `${status.maxPosts}/day`\n        },\n        youtube: {\n          subscribers: ytFormatted?.subscribers || prevStats.youtube.subscribers,\n          watchTime: ytFormatted?.watchTime || prevStats.youtube.watchTime,\n          views: ytFormatted?.views || prevStats.youtube.views,\n          autoUploadsPerWeek: '2/week'\n        }\n      }));\n\n    } catch (err) {\n      console.error('❌ Failed to load analytics:', err);\n      // Don't show notifications for analytics failures to avoid spam\n    } finally {\n      setAnalyticsLoading(false);\n    }\n  }, [status.maxPosts]);\n\n  // ✅ NEW: Check for new autopilot activities and show notifications - DISABLED\n  // const checkAutopilotNotifications = useCallback(async () => {\n  //   if (!notificationHandler) return;\n  //   \n  //   try {\n  //     // Get recent activity to check for new posts\n  //     const res = await fetch('http://localhost:3002/api/activity/feed?limit=20');\n  //     if (res.ok) {\n  //       const data = await res.json();\n  //       const activities = data.data || [];\n  //       \n  //       // Filter activities from the last 2 minutes\n  //       const recentActivities = activities.filter((activity: any) => {\n  //         const activityTime = new Date(activity.timestamp || activity.createdAt).getTime();\n  //         return activityTime > lastAutopilotCheck;\n  //       });\n  //       \n  //       // Show notifications for recent activities\n  //       recentActivities.forEach((activity: any) => {\n  //         const platform = activity.platform;\n  //         const type = activity.type || 'post';\n  //         const status = activity.status;\n  //         \n  //         if (type === 'post' && status === 'success') {\n  //           // ✅ Success notifications disabled to prevent spam\n  //           // if (platform === 'instagram') {\n  //           //   notificationHandler('✅ Video posted to Instagram', 'success');\n  //           // } else if (platform === 'youtube') {\n  //           //   notificationHandler('✅ Video posted to YouTube', 'success');\n  //           // }\n  //         } else if (status === 'failed') {\n  //           notificationHandler(`❌ Failed to post to ${platform}`, 'error');\n  //         } else if (type === 'repost' && activity.message?.includes('already posted')) {\n  //           notificationHandler('🧠 Skipped – Already posted in last 30 days', 'info');\n  //         } else if (type === 'storage_check' && status === 'warning') {\n  //           notificationHandler('⚠️ Storage warning – check S3/Mongo', 'error');\n  //         }\n  //       });\n  //       \n  //       setLastAutopilotCheck(Date.now());\n  //     }\n  //   } catch (error) {\n  //     console.warn('⚠️ Could not check autopilot notifications:', error);\n  //   }\n  // }, [notificationHandler, lastAutopilotCheck]);\n\n  // ✅ Comprehensive refresh function for all dashboard data\n  const refreshAllData = useCallback(async () => {\n    try {\n      console.log('🔄 Refreshing all dashboard data...');\n      \n      // Refresh activity feed\n      const posts = await fetchEnhancedActivity();\n      setEnhancedActivity(posts);\n      \n      // Refresh queued posts\n      await fetchQueuedPosts();\n      \n      // Check for autopilot notifications - DISABLED\n      // await checkAutopilotNotifications();\n      \n      // Refresh analytics\n      await fetchAnalytics();\n      \n      // Refresh status/settings\n      try {\n        const res = await fetch('https://lifestyle-design-backend-v2.onrender.com/api/settings');\n        if (res.ok) {\n          const data = await res.json();\n          setStatus({\n            autopilot: data.autopilot || false,\n            manual: data.manual !== false,\n            maxPosts: data.maxPosts || 3,\n            postTime: data.postTime || '14:00',\n            repostDelay: data.repostDelay || 1\n          });\n          \n          // ✅ Update platform settings for ChartLines\n          if (data.autopilotPlatforms) {\n            setPlatformSettings({\n              instagram: data.autopilotPlatforms.instagram || false,\n              youtube: data.autopilotPlatforms.youtube || false\n            });\n          }\n        }\n      } catch (settingsError) {\n        console.warn('⚠️ Settings refresh failed:', settingsError);\n      }\n      \n      console.log('✅ All dashboard data refreshed');\n    } catch (error) {\n      console.error('❌ Failed to refresh dashboard data:', error);\n    }\n  }, []);\n  \n\n\n\n  // ✅ NEW: Fetch queued/upcoming AutoPilot posts\n  const fetchQueuedPosts = useCallback(async () => {\n    try {\n      console.log('🔍 Fetching upcoming AutoPilot posts...');\n      const res = await fetch('https://lifestyle-design-backend-v2.onrender.com/api/autopilot/queue?limit=3');\n      if (res.ok) {\n        const data = await res.json();\n        const posts = data.posts || [];\n        console.log('📅 Upcoming posts:', posts);\n        setQueuedPosts(posts);\n        return posts;\n      }\n    } catch (error) {\n      console.warn('⚠️ Could not fetch queued posts:', error);\n      setQueuedPosts([]);\n    }\n    return [];\n  }, []);\n\n  // ✅ NEW: Enhanced activity fetch function\n  const fetchEnhancedActivity = useCallback(async () => {\n    try {\n      // ✅ NEW: Get reactive chart data first\n      const chartRes = await fetch('https://lifestyle-design-backend-v2.onrender.com/api/chart/status');\n      if (chartRes.ok) {\n        const chartData = await chartRes.json();\n        console.log('🔥 Chart reactive data:', chartData);\n        \n        // Update reactive states for chart behavior\n        setEngagementScore(chartData.engagementScore || 0.65);\n        setAutopilotRunning(chartData.autopilotRunning || false);\n        setNewHighScore(chartData.newHighScore || false);\n        setLastPostSpike(chartData.lastPostTime);\n        \n        // ✅ NEW: Update platform data for hearts\n        if (chartData.platformData) {\n          setPlatformData({\n            instagram: {\n              active: chartData.platformData.instagram?.active || false,\n              todayPosts: chartData.platformData.instagram?.todayPosts || 0,\n              reach: chartData.platformData.instagram?.reach || 0,\n              engagement: engagementScore // Use global engagement score\n            },\n            youtube: {\n              active: chartData.platformData.youtube?.active || false,\n              todayPosts: chartData.platformData.youtube?.todayPosts || 0,\n              reach: chartData.platformData.youtube?.reach || 0,\n              engagement: engagementScore // Use global engagement score\n            }\n          });\n        }\n        \n        if (chartData.settings) {\n          setAutopilotVolume(chartData.settings.dailyPostLimit || 3);\n        }\n      }\n    } catch (error) {\n      console.warn('⚠️ Chart status not available');\n    }\n    \n    try {\n      // Try the main activity endpoint first\n      const res = await fetch('https://lifestyle-design-backend-v2.onrender.com/api/activity/feed?limit=20');\n      if (res.ok) {\n        const data = await res.json();\n        const posts = data.data || [];\n        console.log('📊 Enhanced activity data:', posts.slice(0, 3)); // Debug\n        return posts;\n      }\n    } catch (error) {\n      console.warn('⚠️ Enhanced activity not available, trying autopilot endpoint...');\n    }\n    \n    try {\n      // Try the new autopilot-specific activity endpoint\n      const autopilotRes = await fetch('https://lifestyle-design-backend-v2.onrender.com/api/autopilot/activity?limit=20');\n      if (autopilotRes.ok) {\n        const autopilotData = await autopilotRes.json();\n        const posts = autopilotData.posts || [];\n        console.log('📊 Autopilot activity data:', posts.slice(0, 3)); // Debug\n        return posts;\n      }\n    } catch (autopilotError) {\n      console.warn('⚠️ Autopilot activity endpoint not available, using final fallback...');\n    }\n    \n    // No more fallbacks - use existing activity data\n    console.warn('⚠️ All activity endpoints failed, using empty data');\n    \n    return [];\n  }, []);\n\n  // Helper function to format activity data\n  const formatActivity = (activity: Record<string, unknown>) => {\n    const timeAgo = getTimeAgo(activity.createdAt as string | Date);\n    console.log(`🕒 Activity ${activity.type}: ${activity.createdAt} -> ${timeAgo}`);\n    \n    let title = '';\n    let icon = '📊';\n    \n    switch (activity.type) {\n      case 'scrape':\n        title = `Scraped ${activity.postsProcessed} Instagram posts`;\n        icon = '🔍';\n        break;\n      case 'schedule':\n        title = `Queued ${activity.postsSuccessful} videos for posting`;\n        icon = '📅';\n        break;\n      case 'repost':\n        if ((activity.postsSuccessful as number) > 0) {\n          title = `Posted ${activity.postsSuccessful} videos successfully`;\n          icon = '✅';\n        } else {\n          title = 'Checked for posts to publish';\n          icon = '🔄';\n        }\n        break;\n      default:\n        title = `${activity.type} completed`;\n        icon = '📊';\n    }\n    \n    return { title, icon, timeAgo };\n  };\n\n  // Helper function to get time ago\n  const getTimeAgo = (date: Date | string) => {\n    const now = new Date();\n    const activityDate = new Date(date);\n    \n    // Validate the date\n    if (isNaN(activityDate.getTime())) {\n      return 'Unknown time';\n    }\n    \n    const diffMs = now.getTime() - activityDate.getTime();\n    const diffMins = Math.floor(diffMs / (1000 * 60));\n    const diffHours = Math.floor(diffMs / (1000 * 60 * 60));\n    const diffDays = Math.floor(diffMs / (1000 * 60 * 60 * 24));\n    \n    // Handle negative time differences (future dates)\n    if (diffMs < 0) return 'Just now';\n    \n    if (diffMins < 1) return 'Just now';\n    if (diffMins < 60) return `${diffMins} minute${diffMins > 1 ? 's' : ''} ago`;\n    if (diffHours < 24) return `${diffHours} hour${diffHours > 1 ? 's' : ''} ago`;\n    if (diffDays < 7) return `${diffDays} day${diffDays > 1 ? 's' : ''} ago`;\n    \n    // For older dates, show actual date\n    return activityDate.toLocaleDateString('en-US', { \n      month: 'short', \n      day: 'numeric',\n      hour: 'numeric',\n      minute: '2-digit'\n    });\n  };\n\n  const instagramCanvasRef = useRef<HTMLCanvasElement>(null);\n  const youtubeCanvasRef = useRef<HTMLCanvasElement>(null);\n  const particlesRef = useRef<HTMLDivElement>(null);\n\n  // Load settings and analytics from backend on component mount\n  useEffect(() => {\n    async function fetchStatus() {\n      try {\n        const res = await fetch('https://lifestyle-design-backend-v2.onrender.com/api/settings')\n        if (res.ok) {\n          const data = await res.json()\n          setStatus({\n            autopilot: data.autopilot || false,\n            manual: data.manual !== false,\n            maxPosts: data.maxPosts || 3,\n            postTime: data.postTime || '14:00',\n            repostDelay: data.repostDelay || 1\n          })\n        } else {\n          console.warn('⚠️ No settings found, using defaults.')\n        }\n\n        // ✅ NEW: Fetch enhanced activity data and generate chart\n        try {\n          const posts = await fetchEnhancedActivity();\n          setEnhancedActivity(posts);\n\n          // Generate chart data for last 7 days\n          const today = new Date();\n          const last7 = [...Array(7)].map((_, i) => {\n            const d = new Date(today);\n            d.setDate(today.getDate() - i);\n            return d.toISOString().split('T')[0];\n          }).reverse();\n\n          const counts = { instagram: {}, youtube: {} } as any;\n          last7.forEach(date => {\n            counts.instagram[date] = 0;\n            counts.youtube[date] = 0;\n          });\n\n          // Process enhanced activity data for chart\n          posts.forEach((post: any) => {\n            const date = new Date(post.startTime || post.timestamp).toISOString().split('T')[0];\n            if (last7.includes(date)) {\n              const platform = post.platform || 'unknown';\n              if (platform === 'instagram' || platform.includes('instagram')) {\n                counts.instagram[date]++;\n              }\n              if (platform === 'youtube' || platform.includes('youtube')) {\n                counts.youtube[date]++;\n              }\n            }\n          });\n\n          // 🔥 Create reactive chart data based on specifications\n          const createReactiveData = (platform: 'instagram' | 'youtube', baseCounts: number[]) => {\n            // ✅ Line Height Logic: AutoPilot status affects baseline\n            let baseValue;\n            if (!autopilotRunning) {\n              // AutoPilot OFF: lines near bottom (low values)\n              baseValue = 0.5; // Start near bottom\n            } else {\n              // AutoPilot ON: height based on daily post limit\n              const heightRatio = Math.min(autopilotVolume / 10, 0.8); // Max 80% of scale\n              baseValue = 1 + (heightRatio * 8); // Scale 1-9 based on volume\n            }\n\n            // 🔥 Engagement-Based Wave Enhancement\n            const engagementMultiplier = autopilotRunning ? (0.5 + engagementScore * 1.5) : 0.3;\n            \n            // Apply reactive behavior to data points\n            return baseCounts.map(count => {\n              const enhancedValue = baseValue + (count * engagementMultiplier);\n              return Math.max(enhancedValue, 0.1); // Minimum visibility\n            });\n          };\n\n          // ⚡ Special Effects for New High Score\n          const glowIntensity = newHighScore ? 20 : 0;\n          const lineThickness = newHighScore ? 6 : 4; // 2px → 4px → 6px for extra glow\n\n          // 📊 Create enhanced chart data\n          setChartData({\n            labels: last7.map(date => {\n              const d = new Date(date);\n              return d.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\n            }),\n            datasets: [\n              {\n                label: 'Instagram',\n                data: createReactiveData('instagram', last7.map(date => counts.instagram[date])),\n                borderColor: newHighScore ? '#ff69b4' : 'hotpink', // Brighter when glowing\n                backgroundColor: `rgba(255, 105, 180, ${newHighScore ? 0.2 : 0.1})`,\n                borderWidth: lineThickness,\n                tension: 0.4 + (engagementScore * 0.3), // Smoother with higher engagement\n                pointRadius: newHighScore ? 8 : 6,\n                pointBackgroundColor: newHighScore ? '#ff1493' : 'hotpink',\n                pointBorderColor: '#fff',\n                pointBorderWidth: 2,\n                fill: true,\n                shadowOffsetX: glowIntensity,\n                shadowOffsetY: glowIntensity,\n                shadowBlur: glowIntensity,\n                shadowColor: 'rgba(255, 105, 180, 0.6)',\n              },\n              {\n                label: 'YouTube',\n                data: createReactiveData('youtube', last7.map(date => counts.youtube[date])),\n                borderColor: newHighScore ? '#ff0000' : 'red', // Brighter when glowing\n                backgroundColor: `rgba(255, 0, 0, ${newHighScore ? 0.2 : 0.1})`,\n                borderWidth: lineThickness,\n                tension: 0.4 + (engagementScore * 0.3), // Smoother with higher engagement\n                pointRadius: newHighScore ? 8 : 6,\n                pointBackgroundColor: newHighScore ? '#cc0000' : 'red',\n                pointBorderColor: '#fff',\n                pointBorderWidth: 2,\n                fill: true,\n                shadowOffsetX: glowIntensity,\n                shadowOffsetY: glowIntensity,\n                shadowBlur: glowIntensity,\n                shadowColor: 'rgba(255, 0, 0, 0.6)',\n              },\n            ]\n          });\n\n          console.log('📊 Chart data generated:', counts);\n        } catch (enhancedErr) {\n          console.warn('⚠️ Enhanced activity failed, trying fallback...');\n        }\n\n        // Use scheduler status for autopilot data\n        try {\n          const schedulerRes = await fetch('https://lifestyle-design-backend-v2.onrender.com/api/scheduler/status')\n          if (schedulerRes.ok) {\n            const schedulerData = await schedulerRes.json()\n            if (schedulerData.success) {\n              console.log('📊 Scheduler Status:', schedulerData.data)\n              setAutopilotRunning(schedulerData.data.running || false)\n            }\n          }\n        } catch (schedulerErr) {\n          console.warn('⚠️ Scheduler status not available:', schedulerErr)\n        }\n      } catch (err) {\n        console.error('❌ Failed to load settings for dashboard:', err)\n      }\n    }\n\n\n\n    fetchStatus();\n    fetchAnalytics();\n    \n    // ✅ Enhanced periodic refresh for real-time updates\n    const statusInterval = setInterval(fetchStatus, 30000); // Every 30 seconds for live metrics\n    \n    // ✅ Additional refresh for activity feed every 60 seconds\n    const activityInterval = setInterval(async () => {\n      try {\n        const posts = await fetchEnhancedActivity();\n        setEnhancedActivity(posts);\n        console.log('🔄 Activity feed auto-refreshed');\n      } catch (error) {\n        console.warn('⚠️ Activity feed auto-refresh failed:', error);\n      }\n    }, 60000); // Every 60 seconds\n    \n    return () => {\n      clearInterval(statusInterval);\n      clearInterval(activityInterval);\n    };\n  }, [])\n\n  useEffect(() => {\n    // Update stats when status changes\n    setStats(prevStats => ({\n      ...prevStats,\n      instagram: {\n        ...prevStats.instagram,\n        autoPostsPerDay: `${status.maxPosts}/day`\n      }\n    }));\n  }, [status]);\n\n  useEffect(() => {\n    // Create particles\n    const createParticles = () => {\n      if (!particlesRef.current) return;\n      \n      // Clear existing particles\n      particlesRef.current.innerHTML = '';\n      \n      // Create 20 particles\n      for (let i = 0; i < 20; i++) {\n        const particle = document.createElement('div');\n        particle.className = `particle ${currentPlatform}`;\n        particle.style.left = Math.random() * 100 + '%';\n        particle.style.animationDelay = Math.random() * 20 + 's';\n        particle.style.animationDuration = (15 + Math.random() * 10) + 's';\n        particlesRef.current.appendChild(particle);\n      }\n    };\n\n    createParticles();\n  }, [currentPlatform]);\n\n  useEffect(() => {\n    // Draw charts\n    const drawChart = (canvas: HTMLCanvasElement | null, platform: string) => {\n      if (!canvas) return;\n      \n      const ctx = canvas.getContext('2d');\n      if (!ctx) return;\n      \n      let animationFrame = 0;\n      \n      const animate = () => {\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        \n        // Draw grid\n        ctx.strokeStyle = 'rgba(255, 255, 255, 0.1)';\n        ctx.lineWidth = 1;\n        \n        for (let i = 0; i <= 10; i++) {\n          const y = (canvas.height / 10) * i;\n          ctx.beginPath();\n          ctx.moveTo(0, y);\n          ctx.lineTo(canvas.width, y);\n          ctx.stroke();\n        }\n        \n        // Calculate pulse effects based on real data and autopilot volume\n        const queueIntensity = Math.min(queueSize / 10, 1); // Max intensity at 10+ videos\n        const volumeIntensity = Math.min(autopilotVolume / 5, 1); // Max intensity at 5+ posts/day\n        const runningGlow = autopilotRunning ? 0.3 : 0;\n        const burstEffect = Date.now() - lastQueueUpdate < 5000 ? Math.sin(animationFrame * 0.5) * 0.5 : 0;\n        \n        // Enhanced wave intensity based on queue size and autopilot volume\n        const baseAmplitude = 50;\n        const combinedIntensity = Math.max(queueIntensity, volumeIntensity);\n        const queueAmplitude = baseAmplitude * (0.5 + combinedIntensity * 0.5);\n        const secondaryAmplitude = 30 * (0.5 + combinedIntensity * 0.5);\n        \n        // Draw animated line with dynamic intensity and speed based on volume\n        const points = [];\n        // Dynamic animation speed: 1/day = slow (0.05), 3+/day = fast (0.15)\n        const baseSpeed = 0.05;\n        const volumeSpeed = Math.min(autopilotVolume * 0.03, 0.1);\n        const animationSpeed = baseSpeed + volumeSpeed;\n        \n        for (let i = 0; i <= 100; i++) {\n          const x = (canvas.width / 100) * i;\n          const y = canvas.height / 2 + \n                   Math.sin((i + animationFrame) * animationSpeed * 2) * queueAmplitude + \n                   Math.sin((i + animationFrame) * animationSpeed) * secondaryAmplitude;\n          points.push({x, y});\n        }\n        \n        // Add glow effect when autopilot is running\n        if (autopilotRunning || burstEffect > 0) {\n          const glowIntensity = runningGlow + Math.abs(burstEffect);\n          ctx.shadowColor = platform === 'youtube' ? '#ff0000' : '#e1306c';\n          ctx.shadowBlur = 20 * glowIntensity;\n          ctx.shadowOffsetX = 0;\n          ctx.shadowOffsetY = 0;\n        }\n        \n        // Platform-specific gradient with dynamic opacity based on volume\n        const gradient = ctx.createLinearGradient(0, 0, canvas.width, 0);\n        const opacity = 0.8 + (combinedIntensity * 0.2) + runningGlow;\n        \n        if (platform === 'youtube') {\n          gradient.addColorStop(0, `rgba(255, 0, 0, ${opacity})`);\n          gradient.addColorStop(0.5, `rgba(255, 68, 68, ${opacity})`);\n          gradient.addColorStop(1, `rgba(204, 0, 0, ${opacity})`);\n        } else {\n          gradient.addColorStop(0, `rgba(255, 68, 88, ${opacity})`);\n          gradient.addColorStop(0.5, `rgba(225, 48, 108, ${opacity})`);\n          gradient.addColorStop(1, `rgba(131, 58, 180, ${opacity})`);\n        }\n        \n        ctx.strokeStyle = gradient;\n        // Dynamic line width: 1/day = thin (2px), 3+/day = thick (7px)\n        const baseLineWidth = 2;\n        const volumeLineWidth = Math.min(autopilotVolume * 1.5, 5);\n        ctx.lineWidth = baseLineWidth + volumeLineWidth + (combinedIntensity * 2);\n        ctx.beginPath();\n        \n        points.forEach((point, index) => {\n          if (index === 0) {\n            ctx.moveTo(point.x, point.y);\n          } else {\n            ctx.lineTo(point.x, point.y);\n          }\n        });\n        \n        ctx.stroke();\n        \n        // Add particle burst effect for new content\n        if (burstEffect > 0) {\n          const particleCount = Math.floor(queueSize / 2) + 3;\n          for (let p = 0; p < particleCount; p++) {\n            const px = Math.random() * canvas.width;\n            const py = Math.random() * canvas.height;\n            const size = Math.random() * 3 + 1;\n            \n            ctx.fillStyle = `rgba(255, 255, 255, ${Math.abs(burstEffect) * 0.8})`;\n            ctx.beginPath();\n            ctx.arc(px, py, size, 0, Math.PI * 2);\n            ctx.fill();\n          }\n        }\n        \n        // Reset shadow for next frame\n        ctx.shadowBlur = 0;\n        \n        animationFrame += 0.5;\n        requestAnimationFrame(animate);\n      };\n      \n      animate();\n    };\n\n    drawChart(instagramCanvasRef.current, 'instagram');\n    drawChart(youtubeCanvasRef.current, 'youtube');\n  }, [autopilotRunning, queueSize, lastQueueUpdate]);\n\n  const switchPlatform = async (platform: string) => {\n    try {\n      console.log(`Switching to ${platform}`);\n      setCurrentPlatform(platform);\n      \n      // ✅ Check if this platform is active in autopilot settings\n      try {\n        const settingsRes = await fetch('https://lifestyle-design-backend-v2.onrender.com/api/settings');\n        if (settingsRes.ok) {\n          const settings = await settingsRes.json();\n          const platformActive = settings.autopilotPlatforms?.[platform] !== false;\n          \n          if (!platformActive) {\n            showNotification(`⚠️ ${platform.charAt(0).toUpperCase() + platform.slice(1)} is currently disabled in autopilot settings`, 'error');\n          } else {\n            showNotification(`📱 Switched to ${platform.charAt(0).toUpperCase() + platform.slice(1)}`);\n          }\n        } else {\n          showNotification(`📱 Switched to ${platform.charAt(0).toUpperCase() + platform.slice(1)}`);\n        }\n      } catch (settingsError) {\n        console.warn('Could not check platform settings:', settingsError);\n        showNotification(`📱 Switched to ${platform.charAt(0).toUpperCase() + platform.slice(1)}`);\n      }\n    } catch (error) {\n      console.error('Error switching platform:', error);\n      showNotification('❌ Error switching platform', 'error');\n    }\n  };\n\n  const toggleMenu = () => {\n    try {\n      setMenuOpen(!menuOpen);\n    } catch (error) {\n      console.error('Error toggling menu:', error);\n    }\n  };\n\n\n\n  const handleMenuClick = (action: string) => {\n    try {\n      console.log('Menu action:', action);\n      \n      // Close menu first\n      setMenuOpen(false);\n      \n      // Handle menu actions\n      switch (action) {\n        case 'upload':\n          // Navigate to upload page\n          window.location.href = '/upload';\n          showNotification('📤 Opening Upload page...');\n          break;\n\n        case 'manual':\n          // Navigate to manual post page\n          window.location.href = '/manual';\n          showNotification('✍️ Opening Manual Post page...');\n          break;\n        case 'autopilot-page':\n          // Navigate to AutoPilot dashboard page\n          window.location.href = '/autopilot';\n          showNotification('🚀 Opening AutoPilot Dashboard...');\n          break;\n        case 'settings':\n          // Navigate to settings page\n          window.location.href = '/settings';\n          showNotification('⚙️ Opening Settings...');\n          break;\n        default:\n          console.warn('Unknown menu action:', action);\n          showNotification('❌ Unknown action: ' + action, 'error');\n          break;\n      }\n    } catch (error) {\n      console.error('Error handling menu click:', error);\n    }\n  };\n\n  const showNotification = (message: string, type: 'success' | 'error' | 'info' = 'success') => {\n    try {\n      // Create a temporary notification\n      const notification = document.createElement('div');\n      const bgColor = type === 'error' ? 'rgba(239, 68, 68, 0.9)' : \n                     type === 'info' ? 'rgba(59, 130, 246, 0.9)' : \n                     'rgba(34, 197, 94, 0.9)';\n      \n      notification.style.cssText = `\n        position: fixed;\n        top: 20px;\n        right: 20px;\n        background: ${bgColor};\n        color: white;\n        padding: 1rem 1.5rem;\n        border-radius: 10px;\n        z-index: 10000;\n        backdrop-filter: blur(10px);\n        animation: slideIn 0.3s ease;\n        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);\n        border: 1px solid rgba(255, 255, 255, 0.1);\n        font-weight: 500;\n        max-width: 300px;\n      `;\n      notification.textContent = message;\n      \n      document.body.appendChild(notification);\n      \n      // Remove notification after 3 seconds\n      setTimeout(() => {\n        notification.style.animation = 'slideOut 0.3s ease';\n        setTimeout(() => {\n          if (notification.parentNode) {\n            notification.remove();\n          }\n        }, 300);\n      }, 3000);\n      \n    } catch (error) {\n      console.error('Error showing notification:', error);\n    }\n  };\n\n  const handleControlBtnClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n    try {\n      const parent = e.currentTarget.parentElement;\n      if (parent) {\n        const activeBtn = parent.querySelector('.control-btn.active');\n        if (activeBtn) {\n          activeBtn.classList.remove('active');\n        }\n        e.currentTarget.classList.add('active');\n      }\n      \n      showNotification(`📊 Chart period changed to ${e.currentTarget.textContent}`);\n    } catch (error) {\n      console.error('Error handling control button click:', error);\n    }\n  };\n\n  // Manual Post Now handler\n  const handleManualPostNow = async () => {\n    if (manualPostRunning) return; // Prevent double clicks\n    \n    setManualPostRunning(true);\n    \n    try {\n      const response = await fetch('https://lifestyle-design-backend-v2.onrender.com/api/autopilot/manual-post', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' }\n      });\n\n      const result = await response.json();\n      \n      if (result.success) {\n        showNotification('✅ Posted successfully!', 'success');\n        // Refresh data\n        fetchAnalytics();\n        fetchEnhancedActivity();\n      } else {\n        showNotification('❌ Post failed', 'error');\n      }\n    } catch (error) {\n      showNotification('❌ Connection error', 'error');\n    }\n    \n    // Reset button after 2 seconds\n    setTimeout(() => {\n      setManualPostRunning(false);\n    }, 2000);\n  };\n\n  // Close menu when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (e: MouseEvent) => {\n      const menuContainer = document.querySelector('.menu-container');\n      if (!menuContainer?.contains(e.target as Node) && menuOpen) {\n        setMenuOpen(false);\n      }\n    };\n\n    document.addEventListener('click', handleClickOutside);\n    return () => document.removeEventListener('click', handleClickOutside);\n  }, [menuOpen]);\n\n  // Keyboard shortcuts\n  useEffect(() => {\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (e.key === 'Escape' && menuOpen) {\n        setMenuOpen(false);\n      }\n      if (e.key === '1' && e.ctrlKey) {\n        e.preventDefault();\n        switchPlatform('instagram');\n      }\n      if (e.key === '2' && e.ctrlKey) {\n        e.preventDefault();\n        switchPlatform('youtube');\n      }\n      if (e.key === 'u' && e.ctrlKey) {\n        e.preventDefault();\n        handleMenuClick('upload');\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown);\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [menuOpen]);\n\n  // ✅ NEW: Real-time notification checking (every 10 seconds) - DISABLED\n  // useEffect(() => {\n  //   if (!notificationHandler) return;\n  //   \n  //   // Initialize check timestamp only once\n  //   setLastAutopilotCheck(prev => prev === 0 ? Date.now() - 60000 : prev);\n  //   \n  //   // More frequent notification checking\n  //   const notificationInterval = setInterval(checkAutopilotNotifications, 10000);\n  //   \n  //   return () => clearInterval(notificationInterval);\n  // }, [notificationHandler]);\n\n  return (\n    <div>\n      <div className=\"floating-particles\" ref={particlesRef}></div>\n      <div className={`menu-overlay ${menuOpen ? 'show' : ''}`} onClick={() => setMenuOpen(false)}></div>\n      \n      {/* ✅ NEW: Real-time notifications for AutoPilot events - DISABLED */}\n      {/* <NotificationSystem onShowNotification={handleNotificationSetup} /> */}\n      \n      <div className=\"dashboard-container\">\n        <header className=\"header\">\n          <div className=\"platform-switcher\">\n            <button \n              className={`platform-btn instagram ${currentPlatform === 'instagram' ? 'active' : ''}`}\n              onClick={() => switchPlatform('instagram')}\n            >\n              📷 Instagram\n            </button>\n            <button \n              className={`platform-btn youtube ${currentPlatform === 'youtube' ? 'active' : ''}`}\n              onClick={() => switchPlatform('youtube')}\n            >\n              ▶️ YouTube\n            </button>\n          </div>\n\n          <div className=\"logo\">Lifestyle Design Social</div>\n          \n          <div className=\"header-right\">\n            <div className=\"menu-container\">\n              <div className={`menu-btn ${menuOpen ? 'active' : ''}`} onClick={toggleMenu}>\n                <span className=\"menu-icon\">⋮</span>\n              </div>\n              <div className={`dropdown-menu ${menuOpen ? 'show' : ''}`}>\n                <div className=\"menu-item\" onClick={() => handleMenuClick('upload')}>\n                  <div className=\"menu-item-icon\">📤</div>\n                  <span>Upload Videos</span>\n                </div>\n\n                <div className=\"menu-item\" onClick={() => handleMenuClick('manual')}>\n                  <div className=\"menu-item-icon\">✍</div>\n                  <span>Manual Post</span>\n                </div>\n                <div className=\"menu-item\" onClick={() => handleMenuClick('autopilot-page')}>\n                  <div className=\"menu-item-icon\">🚀</div>\n                  <span>AutoPilot Dashboard</span>\n                </div>\n                <div className=\"menu-item\" onClick={() => handleMenuClick('settings')}>\n                  <div className=\"menu-item-icon\">⚙</div>\n                  <span>Settings</span>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"user-profile\">\n              <div className=\"avatar\">SM</div>\n              <div className=\"status-indicator\"></div>\n            </div>\n          </div>\n        </header>\n\n\n\n        {/* Instagram Data */}\n        <div id=\"instagram-data\" className={`platform-data ${currentPlatform === 'instagram' ? 'active' : ''}`}>\n          <div className=\"metrics-grid\">\n            <div className=\"metric-card\">\n              <div className=\"metric-header\">\n                <span className=\"metric-title\">Followers</span>\n                <div className=\"metric-icon\">👥</div>\n              </div>\n              <div className=\"metric-value\">{stats.instagram.followers}</div>\n              <div className=\"metric-change change-positive\">\n                ↗ +5.2% this week\n              </div>\n            </div>\n\n            <div className=\"metric-card\">\n              <div className=\"metric-header\">\n                <span className=\"metric-title\">Engagement Rate</span>\n                <div className=\"metric-icon\">❤️</div>\n              </div>\n              <div className=\"metric-value\">{stats.instagram.engagement}</div>\n              <div className=\"metric-change change-positive\">\n                ↗ +0.8% from last post\n              </div>\n            </div>\n\n            <div className=\"metric-card\">\n              <div className=\"metric-header\">\n                <span className=\"metric-title\">Reach</span>\n                <div className=\"metric-icon\">📊</div>\n              </div>\n              <div className=\"metric-value\">{stats.instagram.reach}</div>\n              <div className=\"metric-change change-positive\">\n                ↗ +12.4% today\n              </div>\n            </div>\n\n            <div className=\"metric-card\">\n              <div className=\"metric-header\">\n                <span className=\"metric-title\">Auto-Post Status</span>\n                <div className={`auto-post-status ${autopilotStatus === 'error' ? 'inactive' : ''}`}>\n                  <div className={`status-indicator ${autopilotStatus === 'running' ? 'pulsing' : ''}`}></div>\n                  {autopilotStatus === 'running' ? 'Running...' :\n                   autopilotStatus === 'success' ? 'Posted!' :\n                   autopilotStatus === 'error' ? 'Failed' :\n                   status.autopilot ? 'Active' : 'Inactive'}\n                </div>\n              </div>\n              <div className=\"metric-value\">{status.maxPosts}/day</div>\n              <div className=\"metric-change\">\n                Next post at {status.postTime} (delay: {status.repostDelay}d)\n              </div>\n            </div>\n          </div>\n\n          <div className=\"grid-layout\">\n            {/* 🌊 Animated Wave Chart - Reactive to Autopilot Data */}\n            <DashboardChart />\n            \n            {/* ❤️💗 Heart Indicators - Shows Instagram/YouTube Autopilot Status */}\n            <HeartStatusCard />\n          </div>\n\n          {/* 🚀 Manual Post Control Panel */}\n          <div className=\"manual-post-panel\" style={{\n            marginTop: '20px',\n            display: 'flex',\n            justifyContent: 'center',\n            gap: '15px'\n          }}>\n            <button\n              onClick={handleManualPostNow}\n              disabled={manualPostRunning}\n              className=\"manual-post-button\"\n              style={{\n                backgroundColor: manualPostRunning ? '#666' : '#E1306C',\n                color: 'white',\n                border: 'none',\n                borderRadius: '8px',\n                padding: '12px 24px',\n                fontSize: '16px',\n                fontWeight: 'bold',\n                cursor: manualPostRunning ? 'not-allowed' : 'pointer',\n                display: 'flex',\n                alignItems: 'center',\n                gap: '8px',\n                boxShadow: '0 4px 12px rgba(225, 48, 108, 0.3)',\n                transition: 'all 0.3s ease',\n                opacity: manualPostRunning ? 0.6 : 1\n              }}\n              onMouseEnter={(e) => {\n                if (!manualPostRunning) {\n                  e.currentTarget.style.backgroundColor = '#C13584';\n                  e.currentTarget.style.transform = 'translateY(-2px)';\n                  e.currentTarget.style.boxShadow = '0 6px 20px rgba(225, 48, 108, 0.4)';\n                }\n              }}\n              onMouseLeave={(e) => {\n                if (!manualPostRunning) {\n                  e.currentTarget.style.backgroundColor = '#E1306C';\n                  e.currentTarget.style.transform = 'translateY(0px)';\n                  e.currentTarget.style.boxShadow = '0 4px 12px rgba(225, 48, 108, 0.3)';\n                }\n              }}\n            >\n              {manualPostRunning ? (\n                <>\n                  <span style={{ animation: 'spin 1s linear infinite' }}>⏳</span>\n                  Posting...\n                </>\n              ) : (\n                <>\n                  ⚡ Post Now\n                </>\n              )}\n            </button>\n            \n\n          </div>\n\n          <div className=\"grid-layout\">\n            {/* ✅ Recent AutoPilot Posts Component - positioned under lines graph */}\n            <RecentAutoPilotPostsWrapper platform=\"instagram\" />\n            <div></div>\n          </div>\n        </div>\n\n        {/* YouTube Data */}\n        <div id=\"youtube-data\" className={`platform-data ${currentPlatform === 'youtube' ? 'active' : ''}`}>\n          <div className=\"metrics-grid\">\n            <div className=\"metric-card youtube\">\n              <div className=\"metric-header\">\n                <span className=\"metric-title\">Subscribers</span>\n                <div className=\"metric-icon youtube\">📺</div>\n              </div>\n              <div className=\"metric-value youtube\">{stats.youtube.subscribers}</div>\n              <div className=\"metric-change change-positive\">\n                ↗ +3.8% this month\n              </div>\n            </div>\n\n            <div className=\"metric-card youtube\">\n              <div className=\"metric-header\">\n                <span className=\"metric-title\">Watch Time</span>\n                <div className=\"metric-icon youtube\">⏱️</div>\n              </div>\n              <div className=\"metric-value youtube\">{stats.youtube.watchTime}</div>\n              <div className=\"metric-change change-positive\">\n                ↗ +15.7% hours this week\n              </div>\n            </div>\n\n            <div className=\"metric-card youtube\">\n              <div className=\"metric-header\">\n                <span className=\"metric-title\">Views</span>\n                <div className=\"metric-icon youtube\">👁️</div>\n              </div>\n              <div className=\"metric-value youtube\">{stats.youtube.views}</div>\n              <div className=\"metric-change change-positive\">\n                ↗ +8.3% this week\n              </div>\n            </div>\n\n            <div className=\"metric-card youtube\">\n              <div className=\"metric-header\">\n                <span className=\"metric-title\">Auto-Upload</span>\n                <div className={`auto-post-status ${autopilotStatus === 'error' ? 'inactive' : ''}`}>\n                  <div className={`status-indicator ${autopilotStatus === 'running' ? 'pulsing' : ''}`}></div>\n                  {autopilotStatus === 'running' ? 'Running...' :\n                   autopilotStatus === 'success' ? 'Posted!' :\n                   autopilotStatus === 'error' ? 'Failed' :\n                   status.autopilot ? 'Active' : 'Inactive'}\n                </div>\n              </div>\n              <div className=\"metric-value youtube\">{status.maxPosts}/day</div>\n              <div className=\"metric-change\">\n                Next upload at {status.postTime} (delay: {status.repostDelay}d)\n              </div>\n            </div>\n          </div>\n\n          <div className=\"grid-layout\">\n            {/* 🌊 Animated Wave Chart - Reactive to Autopilot Data */}\n            <DashboardChart />\n            \n            {/* ❤️💗 Heart Indicators - Shows Instagram/YouTube Autopilot Status */}\n            <HeartStatusCard />\n          </div>\n\n          <div className=\"grid-layout\">\n            {/* ✅ Recent AutoPilot Posts Component - positioned under lines graph */}\n            <RecentAutoPilotPostsWrapper platform=\"youtube\" />\n            <div></div>\n          </div>\n        </div>\n\n        {/* ✨ Luxury Chart Descriptions */}\n        <div className=\"chart-descriptions\">\n          <div className=\"description-container\">\n            <h3 className=\"description-title\">Dashboard Analytics Overview</h3>\n            \n            <div className=\"description-grid\">\n              <div className=\"description-card\">\n                <div className=\"description-icon\">🌊</div>\n                <h4>Dynamic Wave Chart</h4>\n                <p>Real-time engagement visualization with adaptive wave patterns. Wave amplitude reflects current engagement levels, while animation speed corresponds to posting volume. Glowing effects indicate new performance records.</p>\n              </div>\n              \n              <div className=\"description-card\">\n                <div className=\"description-icon\">📊</div>\n                <h4>Platform Chart Lines</h4>\n                <p>Interactive status indicators for Instagram (pink) and YouTube (red) autopilot systems. Bar height represents daily post volume configuration, with smooth animations reflecting platform activity and engagement.</p>\n              </div>\n            </div>\n            \n            <div className=\"description-legend\">\n              <div className=\"legend-item\">\n                <span className=\"legend-color pink\"></span>\n                <span>Instagram Autopilot</span>\n              </div>\n              <div className=\"legend-item\">\n                <span className=\"legend-color red\"></span>\n                <span>YouTube Autopilot</span>\n              </div>\n              <div className=\"legend-item\">\n                <span className=\"legend-glow\"></span>\n                <span>New Performance Record</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}