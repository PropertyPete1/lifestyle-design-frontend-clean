{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 13, "column": 0}, "map": {"version":3,"sources":["file:///Users/peterallen/Lifestyle%20Design%20Auto%20Poster/frontend-v2-clean/src/components/ZillowDashboard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { \n  Home, Search, MessageCircle, FileText, Settings, \n  TestTube, BarChart3, Play, Download, Send, \n  RotateCcw, Filter, Calendar, Clock, TrendingUp,\n  MapPin, Users, CheckCircle, XCircle, Shield,\n  Eye, Save, RefreshCw, Zap, Target\n} from 'lucide-react';\n\nconst ZillowDashboard = () => {\n  const [activeTab, setActiveTab] = useState('dashboard');\n  const [listingMode, setListingMode] = useState('both'); // rent, sale, both\n  const [autoMessage, setAutoMessage] = useState(true);\n  const [isMobile, setIsMobile] = useState(false);\n  const [sidebarCollapsed, setSidebarCollapsed] = useState(false);\n\n  // Sample data\n  const [scraperStats, setScraperStats] = useState({\n    lastRun: '2 hours ago',\n    totalListings: 47,\n    messagesSentToday: 12,\n    isRunning: false\n  });\n\n  const [listings] = useState([\n    { id: 1, address: '123 Oak St', price: '$2,400', beds: 3, type: 'rent', owner: 'Sarah', status: 'ready' },\n    { id: 2, address: '456 Pine Ave', price: '$450,000', beds: 4, type: 'sale', owner: 'Mike', status: 'sent' },\n    { id: 3, address: '789 Elm Dr', price: '$1,800', beds: 2, type: 'rent', owner: 'Lisa', status: 'ready' },\n    { id: 4, address: '321 Maple Ln', price: '$380,000', beds: 3, type: 'sale', owner: 'John', status: 'blocked' },\n  ]);\n\n  const [messages] = useState([\n    { id: 1, address: '123 Oak St', owner: 'Sarah', type: 'rent', status: 'sent', date: '2025-08-08' },\n    { id: 2, address: '456 Pine Ave', owner: 'Mike', type: 'sale', status: 'failed', date: '2025-08-07' },\n    { id: 3, address: '789 Elm Dr', owner: 'Lisa', type: 'rent', status: 'sent', date: '2025-08-08' },\n  ]);\n\n  // State variables for Send All functionality\n  const [showSendAllModal, setShowSendAllModal] = useState(false);\n  const [sendAllResults, setSendAllResults] = useState([]);\n  const [isSendingAll, setIsSendingAll] = useState(false);\n\n  useEffect(() => {\n    const checkMobile = () => setIsMobile(window.innerWidth < 768);\n    checkMobile();\n    window.addEventListener('resize', checkMobile);\n    return () => window.removeEventListener('resize', checkMobile);\n  }, []);\n\n  const sidebarItems = [\n    { id: 'dashboard', icon: Home, label: 'Dashboard' },\n    { id: 'scraper', icon: Search, label: 'Scraper' },\n    { id: 'messages', icon: MessageCircle, label: 'Messages' },\n    { id: 'logs', icon: FileText, label: 'Logs' },\n    { id: 'settings', icon: Settings, label: 'Settings' },\n    { id: 'test', icon: TestTube, label: 'Test Mode' },\n    { id: 'analytics', icon: BarChart3, label: 'Analytics' },\n  ];\n\n  const ListingModeToggle = ({ className = \"\" }) => (\n    <div className={`flex gap-2 ${className}`}>\n      {[\n        { id: 'rent', label: '🏠 Rent' },\n        { id: 'sale', label: '🏡 Sale' },\n        { id: 'both', label: '🔁 Both' }\n      ].map(mode => (\n        <button\n          key={mode.id}\n          onClick={() => setListingMode(mode.id)}\n          className={`${listingMode === mode.id ? 'platform-btn active' : 'platform-btn'}`}\n        >\n          {mode.label}\n        </button>\n      ))}\n    </div>\n  );\n\n  const StatusBadge = ({ status, type = 'message' }) => {\n    const configs = {\n      message: {\n        sent: { bg: 'bg-green-500/20', text: 'text-green-400', icon: CheckCircle },\n        failed: { bg: 'bg-red-500/20', text: 'text-red-400', icon: XCircle },\n        blocked: { bg: 'bg-orange-500/20', text: 'text-orange-400', icon: Shield },\n        ready: { bg: 'bg-blue-500/20', text: 'text-blue-400', icon: Target }\n      }\n    };\n    \n    const config = configs[type][status];\n    const Icon = config.icon;\n    \n    return (\n      <span className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${config.bg} ${config.text}`}>\n        <Icon className=\"w-3 h-3 mr-1\" />\n        {status}\n      </span>\n    );\n  };\n\n  // Function to handle batch sending (replace with actual API call)\n  const handleSendAllMessages = async () => {\n    setIsSendingAll(true);\n    \n    try {\n      // Replace this with your actual API call\n      const response = await fetch('/api/message/send-batch', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          propertyType: listingMode, // \"rent\" | \"sale\" | \"both\"\n          maxCount: 10, // Optional: from settings\n          useSmartTemplates: true\n        })\n      });\n      \n      const data = await response.json();\n      setSendAllResults(data.results);\n      \n    } catch (error) {\n      console.error('Error sending batch messages:', error);\n      // Handle error - could show error modal or notification\n    } finally {\n      setIsSendingAll(false);\n      setShowSendAllModal(false);\n    }\n  };\n\n  const DashboardContent = () => (\n    <div className=\"space-y-6\">\n      {/* Header with Mode Toggle */}\n      <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4\">\n        <h1 className=\"text-3xl font-bold bg-gradient-to-r from-cyan-400 to-blue-500 bg-clip-text text-transparent\">\n          Dashboard Overview\n        </h1>\n        <ListingModeToggle />\n      </div>\n\n      {/* Stats Grid */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        {[\n          { title: 'Last Run', value: scraperStats.lastRun, icon: Clock, color: 'from-blue-500 to-cyan-500' },\n          { title: 'Total Listings', value: scraperStats.totalListings, icon: Home, color: 'from-green-500 to-emerald-500' },\n          { title: 'Messages Today', value: scraperStats.messagesSentToday, icon: MessageCircle, color: 'from-purple-500 to-pink-500' },\n          { title: 'Success Rate', value: '78%', icon: TrendingUp, color: 'from-orange-500 to-red-500' },\n        ].map((stat, idx) => (\n          <div key={idx} className=\"metric-card\">\n            <div className={`w-12 h-12 rounded-lg bg-gradient-to-r ${stat.color} p-3 mb-4`}>\n              <stat.icon className=\"w-6 h-6 text-white\" />\n            </div>\n            <h3 className=\"text-gray-400 text-sm font-medium\">{stat.title}</h3>\n            <p className=\"text-2xl font-bold text-white mt-1\">{stat.value}</p>\n          </div>\n        ))}\n      </div>\n\n      {/* Controls */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <div className=\"metric-card\">\n          <h3 className=\"text-xl font-semibold text-white mb-4\">Scraper Controls</h3>\n          <div className=\"space-y-4\">\n            <button \n              className=\"nav-button w-full justify-center\"\n              onClick={() => setScraperStats(prev => ({ ...prev, isRunning: !prev.isRunning }))}\n            >\n              <RefreshCw className={`w-5 h-5 mr-2 ${scraperStats.isRunning ? 'animate-spin' : ''}`} />\n              {scraperStats.isRunning ? 'Running...' : 'Re-Run Scraper'}\n            </button>\n            \n            <div className=\"flex items-center justify-between p-3 bg-gray-800 rounded-lg\">\n              <span className=\"text-gray-300\">Auto Messages</span>\n              <button\n                onClick={() => setAutoMessage(!autoMessage)}\n                className={`w-12 h-6 rounded-full transition-all duration-300 ${\n                  autoMessage ? 'bg-gradient-to-r from-green-500 to-emerald-500' : 'bg-gray-600'\n                }`}\n              >\n                <div className={`w-5 h-5 bg-white rounded-full transition-transform duration-300 ${\n                  autoMessage ? 'translate-x-6' : 'translate-x-0.5'\n                } mt-0.5`} />\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"metric-card\">\n          <h3 className=\"text-xl font-semibold text-white mb-4\">Activity Feed</h3>\n          <div className=\"space-y-3 max-h-40 overflow-y-auto\">\n            {[\n              'Messaged owner at 123 Oak St (FRBO)',\n              'Messaged owner at 456 Pine Ave (FSBO)',\n              'Detected red flag: already rented',\n              'Skipped duplicate listing'\n            ].map((activity, idx) => (\n              <div key={idx} className=\"flex items-center text-sm text-gray-300 p-2 bg-gray-800/50 rounded\">\n                <div className=\"w-2 h-2 bg-cyan-400 rounded-full mr-3\" />\n                {activity}\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  const ScraperContent = () => (\n    <div className=\"space-y-6\">\n      <div className=\"flex justify-between items-center\">\n        <h1 className=\"text-3xl font-bold text-white\">Zillow Scraper</h1>\n        <ListingModeToggle />\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <div className=\"metric-card\">\n          <h3 className=\"text-xl font-semibold text-white mb-4\">Search Controls</h3>\n          <div className=\"space-y-4\">\n            <input\n              type=\"text\"\n              placeholder=\"Enter city or zip code...\"\n              className=\"w-full bg-gray-800 border border-gray-700 rounded-lg px-4 py-3 text-white placeholder-gray-400 focus:border-cyan-500 focus:outline-none\"\n            />\n            \n            <div className=\"space-y-3\">\n              {['Listings w/ \"Already Rented\"', 'Listings w/ \"No Agents\"', 'Listings w/ duplicate photos'].map((filter, idx) => (\n                <label key={idx} className=\"flex items-center text-gray-300\">\n                  <input type=\"checkbox\" className=\"mr-3 text-cyan-500\" defaultChecked />\n                  Auto-skip {filter}\n                </label>\n              ))}\n            </div>\n\n            <div className=\"flex gap-3\">\n              <button className=\"nav-button flex-1 justify-center\">\n                <Search className=\"w-5 h-5 mr-2\" />\n                Start Search\n              </button>\n              <button className=\"nav-button flex-1 justify-center\">\n                <Download className=\"w-5 h-5 mr-2\" />\n                Scrape Latest\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"metric-card\">\n          <h3 className=\"text-xl font-semibold text-white mb-4\">Recent Listings</h3>\n          <div className=\"space-y-3 max-h-80 overflow-y-auto\">\n            {listings.map(listing => (\n              <div key={listing.id} className=\"p-3 rounded-lg\" style={{background:'rgba(255,255,255,0.05)', border:'1px solid rgba(255,255,255,0.1)'}}>\n                <div>\n                  <p className=\"text-white font-medium\">{listing.address}</p>\n                  <p className=\"text-gray-400 text-sm\">{listing.price} • {listing.beds} bed • {listing.owner}</p>\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  <span className={`px-2 py-1 rounded text-xs font-medium ${\n                    listing.type === 'rent' ? 'bg-blue-500/20 text-blue-400' : 'bg-green-500/20 text-green-400'\n                  }`}>\n                    {listing.type.toUpperCase()}\n                  </span>\n                  <StatusBadge status={listing.status} />\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  // Complete MessagesContent component\n  const MessagesContent = () => (\n    <div className=\"space-y-6\">\n      {/* Header with Send All Button */}\n      <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4\">\n        <h1 className=\"text-3xl font-bold text-white\">Messages</h1>\n        <div className=\"flex gap-3\">\n          <ListingModeToggle className=\"hidden sm:flex\" />\n          <button \n            onClick={() => setShowSendAllModal(true)}\n            className=\"nav-button font-bold px-6 py-3 shadow-lg\"\n          >\n            <Zap className=\"w-5 h-5 mr-2\" />\n            Send All Messages\n          </button>\n        </div>\n      </div>\n\n      {/* Batch Results Display */}\n      {sendAllResults.length > 0 && (\n        <div className=\"bg-gray-900/50 backdrop-blur-sm border border-gray-800 rounded-xl p-6\">\n          <h3 className=\"text-xl font-semibold text-white mb-4 flex items-center\">\n            <CheckCircle className=\"w-6 h-6 mr-2 text-green-400\" />\n            Batch Send Results\n          </h3>\n          <div className=\"space-y-3\">\n            {sendAllResults.map((result, idx) => (\n              <div key={idx} className=\"flex items-center justify-between p-3 bg-gray-800/50 rounded-lg\">\n                <div className=\"flex items-center\">\n                  {result.status === 'sent' ? (\n                    <CheckCircle className=\"w-5 h-5 text-green-400 mr-3\" />\n                  ) : (\n                    <XCircle className=\"w-5 h-5 text-red-400 mr-3\" />\n                  )}\n                  <span className=\"text-white font-medium\">{result.address}</span>\n                  <span className={`ml-3 px-2 py-1 rounded text-xs font-medium ${\n                    result.type === 'rent' ? 'bg-blue-500/20 text-blue-400' : 'bg-green-500/20 text-green-400'\n                  }`}>\n                    {result.type === 'rent' ? 'Rent' : 'Sale'}\n                  </span>\n                </div>\n                <div className=\"text-right\">\n                  <span className={`text-sm font-medium ${\n                    result.status === 'sent' ? 'text-green-400' : 'text-red-400'\n                  }`}>\n                    {result.status === 'sent' ? '✅ Sent' : '❌ Failed'}\n                  </span>\n                  {result.reason && (\n                    <p className=\"text-xs text-gray-400\">{result.reason}</p>\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Smart Filters Info */}\n      <div className=\"metric-card\">\n        <h3 className=\"text-lg font-semibold text-white mb-3 flex items-center\">\n          <Filter className=\"w-5 h-5 mr-2 text-cyan-400\" />\n          Smart Filters Applied\n        </h3>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          {[\n            'Skips already messaged addresses',\n            'Skips flagged/red listings',\n            'Skips listings with missing message links',\n            'Respects daily message limit from settings'\n          ].map((filter, idx) => (\n            <div key={idx} className=\"flex items-center text-gray-300\">\n              <div className=\"w-2 h-2 bg-cyan-400 rounded-full mr-3\" />\n              {filter}\n            </div>\n          ))}\n        </div>\n      </div>\n      \n      {/* Individual Message Cards */}\n      <div className=\"grid gap-6\">\n        {listings.filter(l => l.status === 'ready').map(listing => (\n          <div key={listing.id} className=\"metric-card\">\n            <div className=\"flex justify-between items-start mb-4\">\n              <div>\n                <h3 className=\"text-xl font-semibold text-white\">{listing.address}</h3>\n                <p className=\"text-gray-400\">Owner: {listing.owner} • {listing.price} • {listing.type.toUpperCase()}</p>\n              </div>\n              <span className={`px-3 py-1 rounded-full text-sm font-medium ${\n                listing.type === 'rent' ? 'bg-blue-500/20 text-blue-400' : 'bg-green-500/20 text-green-400'\n              }`}>\n                {listing.type === 'rent' ? 'FRBO' : 'FSBO'}\n              </span>\n            </div>\n            \n            <textarea\n              className=\"w-full bg-gray-800 border border-gray-700 rounded-lg px-4 py-3 text-white placeholder-gray-400 focus:border-cyan-500 focus:outline-none mb-4\"\n              rows=\"4\"\n              placeholder={`Hi ${listing.owner}, I'm interested in ${listing.type === 'rent' ? 'renting' : 'purchasing'} your property at ${listing.address}...`}\n            />\n            \n            <div className=\"flex gap-3\">\n              <button className=\"nav-button flex-1 justify-center\">\n                <Send className=\"w-4 h-4 mr-2\" />\n                Send Message\n              </button>\n              <button className=\"action-button\">\n                <RotateCcw className=\"w-4 h-4 mr-2\" />\n                Regenerate\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {/* Send All Confirmation Modal */}\n      {showSendAllModal && (\n        <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50 p-4\">\n          <div className=\"bg-gray-900 border border-gray-800 rounded-xl p-6 max-w-md w-full\">\n            <h3 className=\"text-xl font-bold text-white mb-4\">Send All Messages</h3>\n            <div className=\"space-y-4 mb-6\">\n              <p className=\"text-gray-300\">\n                Ready to send messages to all filtered listings for <strong>{listingMode}</strong> properties?\n              </p>\n              \n              <div className=\"bg-gray-800 rounded-lg p-4\">\n                <h4 className=\"text-sm font-semibold text-white mb-2\">API Configuration:</h4>\n                <div className=\"text-xs text-gray-400 space-y-1\">\n                  <div>Endpoint: <code className=\"text-cyan-400\">POST /api/message/send-batch</code></div>\n                  <div>Property Type: <code className=\"text-cyan-400\">{listingMode}</code></div>\n                  <div>Smart Templates: <code className=\"text-cyan-400\">true</code></div>\n                  <div>Max Count: <code className=\"text-cyan-400\">10</code> (from settings)</div>\n                </div>\n              </div>\n\n              <div className=\"bg-yellow-500/10 border border-yellow-500/20 rounded-lg p-3\">\n                <p className=\"text-yellow-400 text-sm\">\n                  ⚠️ This will send messages to all eligible listings. Make sure your message templates are ready!\n                </p>\n              </div>\n            </div>\n            \n            <div className=\"flex gap-3\">\n              <button\n                onClick={() => setShowSendAllModal(false)}\n                className=\"flex-1 bg-gray-700 hover:bg-gray-600 text-white font-medium py-2 px-4 rounded-lg transition-all duration-300\"\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handleSendAllMessages}\n                disabled={isSendingAll}\n                className=\"flex-1 bg-gradient-to-r from-purple-500 to-pink-600 hover:from-purple-600 hover:to-pink-700 disabled:opacity-50 text-white font-medium py-2 px-4 rounded-lg transition-all duration-300 flex items-center justify-center\"\n              >\n                {isSendingAll ? (\n                  <>\n                    <RefreshCw className=\"w-4 h-4 mr-2 animate-spin\" />\n                    Sending...\n                  </>\n                ) : (\n                  <>\n                    <Zap className=\"w-4 h-4 mr-2\" />\n                    Send All\n                  </>\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n\n  const LogsContent = () => (\n    <div className=\"space-y-6\">\n      <div className=\"flex justify-between items-center\">\n        <h1 className=\"text-3xl font-bold text-white\">Message Logs</h1>\n        <button className=\"bg-gradient-to-r from-cyan-500 to-blue-600 hover:from-cyan-600 hover:to-blue-700 text-white font-medium py-2 px-4 rounded-lg transition-all duration-300 flex items-center\">\n          <Download className=\"w-4 h-4 mr-2\" />\n          Export to Sheets\n        </button>\n      </div>\n\n      <div className=\"bg-gray-900/50 backdrop-blur-sm border border-gray-800 rounded-xl overflow-hidden\">\n        <div className=\"overflow-x-auto\">\n          <table className=\"w-full\">\n            <thead className=\"bg-gray-800\">\n              <tr>\n                <th className=\"px-6 py-4 text-left text-gray-300 font-medium\">Address</th>\n                <th className=\"px-6 py-4 text-left text-gray-300 font-medium\">Owner</th>\n                <th className=\"px-6 py-4 text-left text-gray-300 font-medium\">Type</th>\n                <th className=\"px-6 py-4 text-left text-gray-300 font-medium\">Status</th>\n                <th className=\"px-6 py-4 text-left text-gray-300 font-medium\">Date</th>\n              </tr>\n            </thead>\n            <tbody>\n              {messages.map(msg => (\n                <tr key={msg.id} className=\"border-t border-gray-800 hover:bg-gray-800/30\">\n                  <td className=\"px-6 py-4 text-white\">{msg.address}</td>\n                  <td className=\"px-6 py-4 text-gray-300\">{msg.owner}</td>\n                  <td className=\"px-6 py-4\">\n                    <span className={`px-2 py-1 rounded text-xs font-medium ${\n                      msg.type === 'rent' ? 'bg-blue-500/20 text-blue-400' : 'bg-green-500/20 text-green-400'\n                    }`}>\n                      {msg.type === 'rent' ? 'FRBO' : 'FSBO'}\n                    </span>\n                  </td>\n                  <td className=\"px-6 py-4\">\n                    <StatusBadge status={msg.status} />\n                  </td>\n                  <td className=\"px-6 py-4 text-gray-400\">{msg.date}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n\n  const SettingsContent = () => (\n    <div className=\"space-y-6\">\n      <h1 className=\"text-3xl font-bold text-white\">Settings</h1>\n      \n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <div className=\"space-y-6\">\n          <div className=\"bg-gray-900/50 backdrop-blur-sm border border-gray-800 rounded-xl p-6\">\n            <h3 className=\"text-xl font-semibold text-white mb-4\">Zillow Credentials</h3>\n            <div className=\"space-y-4\">\n              <input\n                type=\"email\"\n                placeholder=\"Zillow Email\"\n                className=\"w-full bg-gray-800 border border-gray-700 rounded-lg px-4 py-3 text-white placeholder-gray-400 focus:border-cyan-500 focus:outline-none\"\n              />\n              <input\n                type=\"password\"\n                placeholder=\"Password (optional)\"\n                className=\"w-full bg-gray-800 border border-gray-700 rounded-lg px-4 py-3 text-white placeholder-gray-400 focus:border-cyan-500 focus:outline-none\"\n              />\n            </div>\n          </div>\n\n          <div className=\"bg-gray-900/50 backdrop-blur-sm border border-gray-800 rounded-xl p-6\">\n            <h3 className=\"text-xl font-semibold text-white mb-4\">Google Sheets</h3>\n            <input\n              type=\"url\"\n              placeholder=\"Google Sheet URL for logs\"\n              className=\"w-full bg-gray-800 border border-gray-700 rounded-lg px-4 py-3 text-white placeholder-gray-400 focus:border-cyan-500 focus:outline-none\"\n            />\n          </div>\n        </div>\n\n        <div className=\"space-y-6\">\n          <div className=\"bg-gray-900/50 backdrop-blur-sm border border-gray-800 rounded-xl p-6\">\n            <h3 className=\"text-xl font-semibold text-white mb-4\">Default Search Mode</h3>\n            <ListingModeToggle />\n          </div>\n\n          <div className=\"bg-gray-900/50 backdrop-blur-sm border border-gray-800 rounded-xl p-6\">\n            <h3 className=\"text-xl font-semibold text-white mb-4\">Filters</h3>\n            <div className=\"space-y-4\">\n              <input\n                type=\"number\"\n                placeholder=\"Max Price\"\n                className=\"w-full bg-gray-800 border border-gray-700 rounded-lg px-4 py-3 text-white placeholder-gray-400 focus:border-cyan-500 focus:outline-none\"\n              />\n              <input\n                type=\"number\"\n                placeholder=\"Min Bedrooms\"\n                className=\"w-full bg-gray-800 border border-gray-700 rounded-lg px-4 py-3 text-white placeholder-gray-400 focus:border-cyan-500 focus:outline-none\"\n              />\n              <label className=\"flex items-center text-gray-300\">\n                <input type=\"checkbox\" className=\"mr-3 text-cyan-500\" defaultChecked />\n                Auto-detect Red Flags\n              </label>\n            </div>\n          </div>\n\n          <div className=\"bg-gray-900/50 backdrop-blur-sm border border-gray-800 rounded-xl p-6\">\n            <h3 className=\"text-xl font-semibold text-white mb-4\">Scheduler</h3>\n            <div className=\"space-y-4\">\n              <input\n                type=\"number\"\n                placeholder=\"Messages per day (e.g. 5)\"\n                className=\"w-full bg-gray-800 border border-gray-700 rounded-lg px-4 py-3 text-white placeholder-gray-400 focus:border-cyan-500 focus:outline-none\"\n              />\n              <input\n                type=\"text\"\n                placeholder=\"Time range (e.g. 10am-6pm)\"\n                className=\"w-full bg-gray-800 border border-gray-700 rounded-lg px-4 py-3 text-white placeholder-gray-400 focus:border-cyan-500 focus:outline-none\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"flex justify-end\">\n        <button className=\"bg-gradient-to-r from-green-500 to-emerald-600 hover:from-green-600 hover:to-emerald-700 text-white font-medium py-3 px-6 rounded-lg transition-all duration-300 flex items-center\">\n          <Save className=\"w-5 h-5 mr-2\" />\n          Save Settings\n        </button>\n      </div>\n    </div>\n  );\n\n  const TestModeContent = () => (\n    <div className=\"space-y-6\">\n      <h1 className=\"text-3xl font-bold text-white\">Test Mode</h1>\n      \n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <div className=\"bg-gray-900/50 backdrop-blur-sm border border-gray-800 rounded-xl p-6\">\n          <h3 className=\"text-xl font-semibold text-white mb-4\">Simulation Controls</h3>\n          <div className=\"space-y-4\">\n            <button className=\"w-full bg-gradient-to-r from-purple-500 to-pink-600 hover:from-purple-600 hover:to-pink-700 text-white font-medium py-3 px-6 rounded-lg transition-all duration-300 flex items-center justify-center\">\n              <Play className=\"w-5 h-5 mr-2\" />\n              Simulate Message Flow\n            </button>\n            <button className=\"w-full bg-gradient-to-r from-orange-500 to-red-600 hover:from-orange-600 hover:to-red-700 text-white font-medium py-3 px-6 rounded-lg transition-all duration-300 flex items-center justify-center\">\n              <Eye className=\"w-5 h-5 mr-2\" />\n              Preview Generated Message\n            </button>\n          </div>\n        </div>\n\n        <div className=\"bg-gray-900/50 backdrop-blur-sm border border-gray-800 rounded-xl p-6\">\n          <h3 className=\"text-xl font-semibold text-white mb-4\">Sample Output</h3>\n          <div className=\"bg-gray-800 rounded-lg p-4 text-gray-300 font-mono text-sm\">\n            Testing message to Sarah at 123 Oak St...<br/>\n            ✅ Message generated<br/>\n            ✅ Red flags checked<br/>\n            🔍 Simulating send...<br/>\n            ✅ Test complete - ready for production\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  const AnalyticsContent = () => (\n    <div className=\"space-y-6\">\n      <h1 className=\"text-3xl font-bold text-white\">Analytics</h1>\n      \n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n        {[\n          { title: 'Messages/Day', value: '15.3', trend: '+12%', color: 'from-blue-500 to-cyan-500' },\n          { title: 'Response Rate', value: '23%', trend: '+5%', color: 'from-green-500 to-emerald-500' },\n          { title: 'Top Zip', value: '78731', trend: 'Austin', color: 'from-purple-500 to-pink-500' },\n        ].map((stat, idx) => (\n          <div key={idx} className=\"bg-gray-900/50 backdrop-blur-sm border border-gray-800 rounded-xl p-6\">\n            <div className={`w-12 h-12 rounded-lg bg-gradient-to-r ${stat.color} p-3 mb-4`}>\n              <BarChart3 className=\"w-6 h-6 text-white\" />\n            </div>\n            <h3 className=\"text-gray-400 text-sm font-medium\">{stat.title}</h3>\n            <p className=\"text-2xl font-bold text-white mt-1\">{stat.value}</p>\n            <p className=\"text-green-400 text-sm mt-1\">{stat.trend}</p>\n          </div>\n        ))}\n      </div>\n\n      <div className=\"bg-gray-900/50 backdrop-blur-sm border border-gray-800 rounded-xl p-6\">\n        <h3 className=\"text-xl font-semibold text-white mb-4\">Smart Suggestions</h3>\n        <div className=\"space-y-3\">\n          {[\n            '🎯 Try FSBO listings in South Austin - 34% higher response rate',\n            '⏰ Best messaging time: 11am-2pm on weekdays',\n            '📍 Expand search to Cedar Park - low competition detected',\n            '💡 Personalized messages get 2.3x more responses'\n          ].map((suggestion, idx) => (\n            <div key={idx} className=\"flex items-center p-3 bg-gray-800/50 rounded-lg\">\n              <Zap className=\"w-5 h-5 text-yellow-400 mr-3 flex-shrink-0\" />\n              <span className=\"text-gray-300\">{suggestion}</span>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderContent = () => {\n    switch (activeTab) {\n      case 'dashboard': return <DashboardContent />;\n      case 'scraper': return <ScraperContent />;\n      case 'messages': return <MessagesContent />;\n      case 'logs': return <LogsContent />;\n      case 'settings': return <SettingsContent />;\n      case 'test': return <TestModeContent />;\n      case 'analytics': return <AnalyticsContent />;\n      default: return <DashboardContent />;\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen text-white\">\n      <div className=\"dashboard-container\">\n      {/* Sidebar */}\n      <div className={`fixed left-0 top-0 h-full bg-white/5 backdrop-blur-xl border-r border-white/10 z-50 transition-all duration-300 ${\n        isMobile ? (sidebarCollapsed ? '-translate-x-full' : 'w-64') : (sidebarCollapsed ? 'w-16' : 'w-64')\n      }`}>\n        <div className=\"p-6\">\n          <div className=\"flex items-center mb-8\">\n            {!sidebarCollapsed && (\n              <div>\n                <h2 className=\"text-2xl font-bold bg-gradient-to-r from-cyan-400 to-blue-500 bg-clip-text text-transparent\">\n                  Zillow Assistant\n                </h2>\n                <p className=\"text-xs text-gray-400\">FRBO + FSBO Ready</p>\n              </div>\n            )}\n          </div>\n\n          <nav className=\"space-y-2\">\n            {sidebarItems.map(item => {\n              const Icon = item.icon;\n              return (\n                <button\n                  key={item.id}\n                  onClick={() => setActiveTab(item.id)}\n                  className={`w-full flex items-center px-4 py-3 rounded-lg transition-all duration-300 group ${\n                    activeTab === item.id\n                      ? 'bg-gradient-to-r from-cyan-500/20 to-blue-500/20 border border-cyan-500/30 text-cyan-400'\n                      : 'text-gray-400 hover:text-white hover:bg-gray-800/50'\n                  }`}\n                >\n                  <Icon className={`w-5 h-5 ${sidebarCollapsed ? '' : 'mr-3'} ${\n                    activeTab === item.id ? 'text-cyan-400' : 'group-hover:text-white'\n                  }`} />\n                  {!sidebarCollapsed && (\n                    <span className=\"font-medium\">{item.label}</span>\n                  )}\n                </button>\n              );\n            })}\n          </nav>\n        </div>\n\n        {/* Collapse Button */}\n        <button\n          onClick={() => setSidebarCollapsed(!sidebarCollapsed)}\n          className=\"absolute -right-3 top-6 w-6 h-6 bg-gray-800 border border-gray-700 rounded-full flex items-center justify-center text-gray-400 hover:text-white hover:bg-gray-700 transition-all duration-300\"\n        >\n          <div className={`w-2 h-2 border-t border-r border-gray-400 transform transition-transform duration-300 ${\n            sidebarCollapsed ? 'rotate-45' : '-rotate-135'\n          }`} />\n        </button>\n      </div>\n\n      {/* Mobile Overlay */}\n      {isMobile && !sidebarCollapsed && (\n        <div \n          className=\"fixed inset-0 bg-black/50 z-40\"\n          onClick={() => setSidebarCollapsed(true)}\n        />\n      )}\n\n      {/* Main Content */}\n      <div className={`transition-all duration-300 ${\n        isMobile ? 'ml-0' : (sidebarCollapsed ? 'ml-16' : 'ml-64')\n      }`}>\n        {/* Mobile Header */}\n        {isMobile && (\n          <div className=\"bg-gray-900/90 backdrop-blur-sm border-b border-gray-800 p-4 flex items-center justify-between\">\n            <button\n              onClick={() => setSidebarCollapsed(!sidebarCollapsed)}\n              className=\"w-8 h-8 flex items-center justify-center text-gray-400 hover:text-white\"\n            >\n              <div className=\"w-4 h-3 flex flex-col justify-between\">\n                <div className=\"w-full h-0.5 bg-current\" />\n                <div className=\"w-full h-0.5 bg-current\" />\n                <div className=\"w-full h-0.5 bg-current\" />\n              </div>\n            </button>\n            <h1 className=\"text-lg font-bold text-white\">Zillow Assistant</h1>\n            <div className=\"w-8\" />\n          </div>\n        )}\n\n        <div className=\"p-0\">\n          {renderContent()}\n        </div>\n      </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ZillowDashboard;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2287, "column": 0}, "map": {"version":3,"sources":["file:///Users/peterallen/Lifestyle%20Design%20Auto%20Poster/frontend-v2-clean/src/app/zillow/page.tsx"],"sourcesContent":["'use client';\n\nimport ZillowDashboard from '@/components/ZillowDashboard';\n\nexport default function ZillowPage() {\n  return <ZillowDashboard />;\n}"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAIe,SAAS;IACtB,qBAAO,8OAAC,qIAAA,CAAA,UAAe;;;;;AACzB","debugId":null}}]
}